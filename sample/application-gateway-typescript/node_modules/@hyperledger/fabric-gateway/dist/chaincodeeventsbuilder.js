"use strict";
/*
 * Copyright 2021 IBM All Rights Reserved.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _ChaincodeEventsBuilder_instances, _ChaincodeEventsBuilder_options, _ChaincodeEventsBuilder_eventsBuilder, _ChaincodeEventsBuilder_newChaincodeEventsRequestProto, _ChaincodeEventsBuilder_newSignedChaincodeEventsRequestProto;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChaincodeEventsBuilder = void 0;
const fabric_protos_1 = require("@hyperledger/fabric-protos");
const chaincodeeventsrequest_1 = require("./chaincodeeventsrequest");
const eventsbuilder_1 = require("./eventsbuilder");
class ChaincodeEventsBuilder {
    constructor(options) {
        _ChaincodeEventsBuilder_instances.add(this);
        _ChaincodeEventsBuilder_options.set(this, void 0);
        _ChaincodeEventsBuilder_eventsBuilder.set(this, void 0);
        __classPrivateFieldSet(this, _ChaincodeEventsBuilder_options, options, "f");
        __classPrivateFieldSet(this, _ChaincodeEventsBuilder_eventsBuilder, new eventsbuilder_1.EventsBuilder(options), "f");
    }
    build() {
        return new chaincodeeventsrequest_1.ChaincodeEventsRequestImpl({
            client: __classPrivateFieldGet(this, _ChaincodeEventsBuilder_options, "f").client,
            signingIdentity: __classPrivateFieldGet(this, _ChaincodeEventsBuilder_options, "f").signingIdentity,
            signedRequest: __classPrivateFieldGet(this, _ChaincodeEventsBuilder_instances, "m", _ChaincodeEventsBuilder_newSignedChaincodeEventsRequestProto).call(this),
        });
    }
}
exports.ChaincodeEventsBuilder = ChaincodeEventsBuilder;
_ChaincodeEventsBuilder_options = new WeakMap(), _ChaincodeEventsBuilder_eventsBuilder = new WeakMap(), _ChaincodeEventsBuilder_instances = new WeakSet(), _ChaincodeEventsBuilder_newChaincodeEventsRequestProto = function _ChaincodeEventsBuilder_newChaincodeEventsRequestProto() {
    const result = new fabric_protos_1.gateway.ChaincodeEventsRequest();
    result.setChannelId(__classPrivateFieldGet(this, _ChaincodeEventsBuilder_options, "f").channelName);
    result.setChaincodeId(__classPrivateFieldGet(this, _ChaincodeEventsBuilder_options, "f").chaincodeName);
    result.setIdentity(__classPrivateFieldGet(this, _ChaincodeEventsBuilder_options, "f").signingIdentity.getCreator());
    result.setStartPosition(__classPrivateFieldGet(this, _ChaincodeEventsBuilder_eventsBuilder, "f").getStartPosition());
    const transactionId = __classPrivateFieldGet(this, _ChaincodeEventsBuilder_options, "f").checkpoint?.getTransactionId();
    if (transactionId) {
        result.setAfterTransactionId(transactionId);
    }
    return result;
}, _ChaincodeEventsBuilder_newSignedChaincodeEventsRequestProto = function _ChaincodeEventsBuilder_newSignedChaincodeEventsRequestProto() {
    const result = new fabric_protos_1.gateway.SignedChaincodeEventsRequest();
    result.setRequest(__classPrivateFieldGet(this, _ChaincodeEventsBuilder_instances, "m", _ChaincodeEventsBuilder_newChaincodeEventsRequestProto).call(this).serializeBinary());
    return result;
};
//# sourceMappingURL=chaincodeeventsbuilder.js.map