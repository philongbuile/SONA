"use strict";
/*
 * Copyright 2021 IBM All Rights Reserved.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _ChaincodeEventsRequestImpl_instances, _ChaincodeEventsRequestImpl_client, _ChaincodeEventsRequestImpl_signingIdentity, _ChaincodeEventsRequestImpl_signedRequest, _ChaincodeEventsRequestImpl_sign, _ChaincodeEventsRequestImpl_isSigned;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChaincodeEventsRequestImpl = void 0;
const chaincodeevent_1 = require("./chaincodeevent");
class ChaincodeEventsRequestImpl {
    constructor(options) {
        _ChaincodeEventsRequestImpl_instances.add(this);
        _ChaincodeEventsRequestImpl_client.set(this, void 0);
        _ChaincodeEventsRequestImpl_signingIdentity.set(this, void 0);
        _ChaincodeEventsRequestImpl_signedRequest.set(this, void 0);
        __classPrivateFieldSet(this, _ChaincodeEventsRequestImpl_client, options.client, "f");
        __classPrivateFieldSet(this, _ChaincodeEventsRequestImpl_signingIdentity, options.signingIdentity, "f");
        __classPrivateFieldSet(this, _ChaincodeEventsRequestImpl_signedRequest, options.signedRequest, "f");
    }
    async getEvents(options) {
        await __classPrivateFieldGet(this, _ChaincodeEventsRequestImpl_instances, "m", _ChaincodeEventsRequestImpl_sign).call(this);
        const responses = __classPrivateFieldGet(this, _ChaincodeEventsRequestImpl_client, "f").chaincodeEvents(__classPrivateFieldGet(this, _ChaincodeEventsRequestImpl_signedRequest, "f"), options);
        return (0, chaincodeevent_1.newChaincodeEvents)(responses);
    }
    getBytes() {
        return __classPrivateFieldGet(this, _ChaincodeEventsRequestImpl_signedRequest, "f").serializeBinary();
    }
    getDigest() {
        return __classPrivateFieldGet(this, _ChaincodeEventsRequestImpl_signingIdentity, "f").hash(__classPrivateFieldGet(this, _ChaincodeEventsRequestImpl_signedRequest, "f").getRequest_asU8());
    }
    setSignature(signature) {
        __classPrivateFieldGet(this, _ChaincodeEventsRequestImpl_signedRequest, "f").setSignature(signature);
    }
}
exports.ChaincodeEventsRequestImpl = ChaincodeEventsRequestImpl;
_ChaincodeEventsRequestImpl_client = new WeakMap(), _ChaincodeEventsRequestImpl_signingIdentity = new WeakMap(), _ChaincodeEventsRequestImpl_signedRequest = new WeakMap(), _ChaincodeEventsRequestImpl_instances = new WeakSet(), _ChaincodeEventsRequestImpl_sign = async function _ChaincodeEventsRequestImpl_sign() {
    if (__classPrivateFieldGet(this, _ChaincodeEventsRequestImpl_instances, "m", _ChaincodeEventsRequestImpl_isSigned).call(this)) {
        return;
    }
    const signature = await __classPrivateFieldGet(this, _ChaincodeEventsRequestImpl_signingIdentity, "f").sign(this.getDigest());
    this.setSignature(signature);
}, _ChaincodeEventsRequestImpl_isSigned = function _ChaincodeEventsRequestImpl_isSigned() {
    const signatureLength = __classPrivateFieldGet(this, _ChaincodeEventsRequestImpl_signedRequest, "f").getSignature()?.length || 0;
    return signatureLength > 0;
};
//# sourceMappingURL=chaincodeeventsrequest.js.map