"use strict";
/*
 * Copyright 2022 IBM All Rights Reserved.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _InMemoryCheckPointer_blockNumber, _InMemoryCheckPointer_transactionId;
Object.defineProperty(exports, "__esModule", { value: true });
exports.InMemoryCheckPointer = void 0;
/**
 * In-memory checkpointer class used to persist checkpointer state in memory.
 */
class InMemoryCheckPointer {
    constructor() {
        _InMemoryCheckPointer_blockNumber.set(this, void 0);
        _InMemoryCheckPointer_transactionId.set(this, void 0);
    }
    checkpointBlock(blockNumber) {
        __classPrivateFieldSet(this, _InMemoryCheckPointer_blockNumber, blockNumber + BigInt(1), "f");
        __classPrivateFieldSet(this, _InMemoryCheckPointer_transactionId, undefined, "f");
        return Promise.resolve();
    }
    checkpointTransaction(blockNumber, transactionId) {
        __classPrivateFieldSet(this, _InMemoryCheckPointer_blockNumber, blockNumber, "f");
        __classPrivateFieldSet(this, _InMemoryCheckPointer_transactionId, transactionId, "f");
        return Promise.resolve();
    }
    async checkpointChaincodeEvent(event) {
        await this.checkpointTransaction(event.blockNumber, event.transactionId);
    }
    getBlockNumber() {
        return __classPrivateFieldGet(this, _InMemoryCheckPointer_blockNumber, "f");
    }
    getTransactionId() {
        return __classPrivateFieldGet(this, _InMemoryCheckPointer_transactionId, "f");
    }
}
exports.InMemoryCheckPointer = InMemoryCheckPointer;
_InMemoryCheckPointer_blockNumber = new WeakMap(), _InMemoryCheckPointer_transactionId = new WeakMap();
//# sourceMappingURL=inmemorycheckpointer.js.map