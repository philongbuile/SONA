"use strict";
/*
 * Copyright 2020 IBM All Rights Reserved.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _SigningIdentity_identity, _SigningIdentity_creator, _SigningIdentity_hash, _SigningIdentity_sign;
Object.defineProperty(exports, "__esModule", { value: true });
exports.SigningIdentity = exports.undefinedSignerMessage = void 0;
const fabric_protos_1 = require("@hyperledger/fabric-protos");
const hashes_1 = require("./hash/hashes");
exports.undefinedSignerMessage = 'No signing implementation';
const undefinedSigner = () => {
    throw new Error(exports.undefinedSignerMessage);
};
class SigningIdentity {
    constructor(options) {
        _SigningIdentity_identity.set(this, void 0);
        _SigningIdentity_creator.set(this, void 0);
        _SigningIdentity_hash.set(this, void 0);
        _SigningIdentity_sign.set(this, void 0);
        __classPrivateFieldSet(this, _SigningIdentity_identity, {
            mspId: options.identity.mspId,
            credentials: Uint8Array.from(options.identity.credentials)
        }, "f");
        const serializedIdentity = new fabric_protos_1.msp.SerializedIdentity();
        serializedIdentity.setMspid(options.identity.mspId);
        serializedIdentity.setIdBytes(options.identity.credentials);
        __classPrivateFieldSet(this, _SigningIdentity_creator, serializedIdentity.serializeBinary(), "f");
        __classPrivateFieldSet(this, _SigningIdentity_hash, options.hash ?? hashes_1.sha256, "f");
        __classPrivateFieldSet(this, _SigningIdentity_sign, options.signer ?? undefinedSigner, "f");
    }
    getIdentity() {
        return {
            mspId: __classPrivateFieldGet(this, _SigningIdentity_identity, "f").mspId,
            credentials: Uint8Array.from(__classPrivateFieldGet(this, _SigningIdentity_identity, "f").credentials)
        };
    }
    getCreator() {
        return Uint8Array.from(__classPrivateFieldGet(this, _SigningIdentity_creator, "f"));
    }
    hash(message) {
        return __classPrivateFieldGet(this, _SigningIdentity_hash, "f").call(this, message);
    }
    async sign(digest) {
        return __classPrivateFieldGet(this, _SigningIdentity_sign, "f").call(this, digest);
    }
}
exports.SigningIdentity = SigningIdentity;
_SigningIdentity_identity = new WeakMap(), _SigningIdentity_creator = new WeakMap(), _SigningIdentity_hash = new WeakMap(), _SigningIdentity_sign = new WeakMap();
//# sourceMappingURL=signingidentity.js.map