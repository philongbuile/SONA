"use strict";
/*
 * Copyright 2021 IBM All Rights Reserved.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.newCommitError = exports.CommitError = void 0;
const status_1 = require("./status");
/**
 * CommitError is thrown to indicate that a transaction committed with an unsuccessful status code.
 */
class CommitError extends Error {
    constructor(properties) {
        super(properties.message);
        this.name = CommitError.name;
        this.code = properties.code;
        this.transactionId = properties.transactionId;
    }
}
exports.CommitError = CommitError;
function newCommitError(status) {
    return new CommitError({
        message: `Transaction ${status.transactionId} failed to commit with status code ${status.code} (${status_1.StatusNames[status.code]})`,
        code: status.code,
        transactionId: status.transactionId,
    });
}
exports.newCommitError = newCommitError;
//# sourceMappingURL=commiterror.js.map