"use strict";
/*
 * Copyright 2020 IBM All Rights Reserved.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _TransactionContext_transactionId, _TransactionContext_signatureHeader;
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionContext = void 0;
const fabric_protos_1 = require("@hyperledger/fabric-protos");
const crypto_1 = require("crypto");
class TransactionContext {
    constructor(signingIdentity) {
        _TransactionContext_transactionId.set(this, void 0);
        _TransactionContext_signatureHeader.set(this, void 0);
        const nonce = (0, crypto_1.randomBytes)(24);
        const creator = signingIdentity.getCreator();
        const saltedCreator = Buffer.concat([nonce, creator]);
        const rawTransactionId = signingIdentity.hash(saltedCreator);
        __classPrivateFieldSet(this, _TransactionContext_transactionId, Buffer.from(rawTransactionId).toString('hex'), "f");
        __classPrivateFieldSet(this, _TransactionContext_signatureHeader, new fabric_protos_1.common.SignatureHeader(), "f");
        __classPrivateFieldGet(this, _TransactionContext_signatureHeader, "f").setCreator(creator);
        __classPrivateFieldGet(this, _TransactionContext_signatureHeader, "f").setNonce(nonce);
    }
    getTransactionId() {
        return __classPrivateFieldGet(this, _TransactionContext_transactionId, "f");
    }
    getSignatureHeader() {
        return __classPrivateFieldGet(this, _TransactionContext_signatureHeader, "f");
    }
}
exports.TransactionContext = TransactionContext;
_TransactionContext_transactionId = new WeakMap(), _TransactionContext_signatureHeader = new WeakMap();
//# sourceMappingURL=transactioncontext.js.map