// GENERATED CODE -- DO NOT EDIT!

// package: discovery
// file: discovery/protocol.proto

import * as discovery_protocol_pb from "../discovery/protocol_pb";
import * as grpc from "@grpc/grpc-js";

interface IDiscoveryService extends grpc.ServiceDefinition<grpc.UntypedServiceImplementation> {
  discover: grpc.MethodDefinition<discovery_protocol_pb.SignedRequest, discovery_protocol_pb.Response>;
}

export const DiscoveryService: IDiscoveryService;

export interface IDiscoveryServer extends grpc.UntypedServiceImplementation {
  discover: grpc.handleUnaryCall<discovery_protocol_pb.SignedRequest, discovery_protocol_pb.Response>;
}

export class DiscoveryClient extends grpc.Client {
  constructor(address: string, credentials: grpc.ChannelCredentials, options?: object);
  discover(argument: discovery_protocol_pb.SignedRequest, callback: grpc.requestCallback<discovery_protocol_pb.Response>): grpc.ClientUnaryCall;
  discover(argument: discovery_protocol_pb.SignedRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<discovery_protocol_pb.Response>): grpc.ClientUnaryCall;
  discover(argument: discovery_protocol_pb.SignedRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<discovery_protocol_pb.Response>): grpc.ClientUnaryCall;
}
