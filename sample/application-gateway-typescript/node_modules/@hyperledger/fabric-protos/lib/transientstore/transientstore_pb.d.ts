// package: transientstore
// file: transientstore/transientstore.proto

import * as jspb from "google-protobuf";
import * as ledger_rwset_rwset_pb from "../ledger/rwset/rwset_pb";
import * as peer_collection_pb from "../peer/collection_pb";

export class TxPvtReadWriteSetWithConfigInfo extends jspb.Message {
  getEndorsedAt(): number;
  setEndorsedAt(value: number): void;

  hasPvtRwset(): boolean;
  clearPvtRwset(): void;
  getPvtRwset(): ledger_rwset_rwset_pb.TxPvtReadWriteSet | undefined;
  setPvtRwset(value?: ledger_rwset_rwset_pb.TxPvtReadWriteSet): void;

  getCollectionConfigsMap(): jspb.Map<string, peer_collection_pb.CollectionConfigPackage>;
  clearCollectionConfigsMap(): void;
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): TxPvtReadWriteSetWithConfigInfo.AsObject;
  static toObject(includeInstance: boolean, msg: TxPvtReadWriteSetWithConfigInfo): TxPvtReadWriteSetWithConfigInfo.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: TxPvtReadWriteSetWithConfigInfo, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): TxPvtReadWriteSetWithConfigInfo;
  static deserializeBinaryFromReader(message: TxPvtReadWriteSetWithConfigInfo, reader: jspb.BinaryReader): TxPvtReadWriteSetWithConfigInfo;
}

export namespace TxPvtReadWriteSetWithConfigInfo {
  export type AsObject = {
    endorsedAt: number,
    pvtRwset?: ledger_rwset_rwset_pb.TxPvtReadWriteSet.AsObject,
    collectionConfigsMap: Array<[string, peer_collection_pb.CollectionConfigPackage.AsObject]>,
  }
}

