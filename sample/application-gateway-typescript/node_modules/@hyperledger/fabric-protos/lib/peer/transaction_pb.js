// source: peer/transaction.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var peer_proposal_response_pb = require('../peer/proposal_response_pb.js');
goog.object.extend(proto, peer_proposal_response_pb);
var common_common_pb = require('../common/common_pb.js');
goog.object.extend(proto, common_common_pb);
goog.exportSymbol('proto.protos.ChaincodeActionPayload', null, global);
goog.exportSymbol('proto.protos.ChaincodeEndorsedAction', null, global);
goog.exportSymbol('proto.protos.MetaDataKeys', null, global);
goog.exportSymbol('proto.protos.ProcessedTransaction', null, global);
goog.exportSymbol('proto.protos.Transaction', null, global);
goog.exportSymbol('proto.protos.TransactionAction', null, global);
goog.exportSymbol('proto.protos.TxValidationCode', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.ProcessedTransaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.ProcessedTransaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.ProcessedTransaction.displayName = 'proto.protos.ProcessedTransaction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.Transaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protos.Transaction.repeatedFields_, null);
};
goog.inherits(proto.protos.Transaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.Transaction.displayName = 'proto.protos.Transaction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.TransactionAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.TransactionAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.TransactionAction.displayName = 'proto.protos.TransactionAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.ChaincodeActionPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.ChaincodeActionPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.ChaincodeActionPayload.displayName = 'proto.protos.ChaincodeActionPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.ChaincodeEndorsedAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protos.ChaincodeEndorsedAction.repeatedFields_, null);
};
goog.inherits(proto.protos.ChaincodeEndorsedAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.ChaincodeEndorsedAction.displayName = 'proto.protos.ChaincodeEndorsedAction';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.ProcessedTransaction.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.ProcessedTransaction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.ProcessedTransaction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.ProcessedTransaction.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionenvelope: (f = msg.getTransactionenvelope()) && common_common_pb.Envelope.toObject(includeInstance, f),
    validationcode: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.ProcessedTransaction}
 */
proto.protos.ProcessedTransaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.ProcessedTransaction;
  return proto.protos.ProcessedTransaction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.ProcessedTransaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.ProcessedTransaction}
 */
proto.protos.ProcessedTransaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.Envelope;
      reader.readMessage(value,common_common_pb.Envelope.deserializeBinaryFromReader);
      msg.setTransactionenvelope(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValidationcode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.ProcessedTransaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.ProcessedTransaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.ProcessedTransaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.ProcessedTransaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionenvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.Envelope.serializeBinaryToWriter
    );
  }
  f = message.getValidationcode();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional common.Envelope transactionEnvelope = 1;
 * @return {?proto.common.Envelope}
 */
proto.protos.ProcessedTransaction.prototype.getTransactionenvelope = function() {
  return /** @type{?proto.common.Envelope} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Envelope, 1));
};


/**
 * @param {?proto.common.Envelope|undefined} value
 * @return {!proto.protos.ProcessedTransaction} returns this
*/
proto.protos.ProcessedTransaction.prototype.setTransactionenvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.ProcessedTransaction} returns this
 */
proto.protos.ProcessedTransaction.prototype.clearTransactionenvelope = function() {
  return this.setTransactionenvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.ProcessedTransaction.prototype.hasTransactionenvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 validationCode = 2;
 * @return {number}
 */
proto.protos.ProcessedTransaction.prototype.getValidationcode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protos.ProcessedTransaction} returns this
 */
proto.protos.ProcessedTransaction.prototype.setValidationcode = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protos.Transaction.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.Transaction.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.Transaction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.Transaction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.Transaction.toObject = function(includeInstance, msg) {
  var f, obj = {
    actionsList: jspb.Message.toObjectList(msg.getActionsList(),
    proto.protos.TransactionAction.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.Transaction}
 */
proto.protos.Transaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.Transaction;
  return proto.protos.Transaction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.Transaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.Transaction}
 */
proto.protos.Transaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protos.TransactionAction;
      reader.readMessage(value,proto.protos.TransactionAction.deserializeBinaryFromReader);
      msg.addActions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.Transaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.Transaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.Transaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.Transaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protos.TransactionAction.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TransactionAction actions = 1;
 * @return {!Array<!proto.protos.TransactionAction>}
 */
proto.protos.Transaction.prototype.getActionsList = function() {
  return /** @type{!Array<!proto.protos.TransactionAction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protos.TransactionAction, 1));
};


/**
 * @param {!Array<!proto.protos.TransactionAction>} value
 * @return {!proto.protos.Transaction} returns this
*/
proto.protos.Transaction.prototype.setActionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protos.TransactionAction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protos.TransactionAction}
 */
proto.protos.Transaction.prototype.addActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protos.TransactionAction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protos.Transaction} returns this
 */
proto.protos.Transaction.prototype.clearActionsList = function() {
  return this.setActionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.TransactionAction.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.TransactionAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.TransactionAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.TransactionAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: msg.getHeader_asB64(),
    payload: msg.getPayload_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.TransactionAction}
 */
proto.protos.TransactionAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.TransactionAction;
  return proto.protos.TransactionAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.TransactionAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.TransactionAction}
 */
proto.protos.TransactionAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.TransactionAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.TransactionAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.TransactionAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.TransactionAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getPayload_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes header = 1;
 * @return {!(string|Uint8Array)}
 */
proto.protos.TransactionAction.prototype.getHeader = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes header = 1;
 * This is a type-conversion wrapper around `getHeader()`
 * @return {string}
 */
proto.protos.TransactionAction.prototype.getHeader_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHeader()));
};


/**
 * optional bytes header = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHeader()`
 * @return {!Uint8Array}
 */
proto.protos.TransactionAction.prototype.getHeader_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHeader()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protos.TransactionAction} returns this
 */
proto.protos.TransactionAction.prototype.setHeader = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes payload = 2;
 * @return {!(string|Uint8Array)}
 */
proto.protos.TransactionAction.prototype.getPayload = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes payload = 2;
 * This is a type-conversion wrapper around `getPayload()`
 * @return {string}
 */
proto.protos.TransactionAction.prototype.getPayload_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPayload()));
};


/**
 * optional bytes payload = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPayload()`
 * @return {!Uint8Array}
 */
proto.protos.TransactionAction.prototype.getPayload_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPayload()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protos.TransactionAction} returns this
 */
proto.protos.TransactionAction.prototype.setPayload = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.ChaincodeActionPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.ChaincodeActionPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.ChaincodeActionPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.ChaincodeActionPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    chaincodeProposalPayload: msg.getChaincodeProposalPayload_asB64(),
    action: (f = msg.getAction()) && proto.protos.ChaincodeEndorsedAction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.ChaincodeActionPayload}
 */
proto.protos.ChaincodeActionPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.ChaincodeActionPayload;
  return proto.protos.ChaincodeActionPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.ChaincodeActionPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.ChaincodeActionPayload}
 */
proto.protos.ChaincodeActionPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChaincodeProposalPayload(value);
      break;
    case 2:
      var value = new proto.protos.ChaincodeEndorsedAction;
      reader.readMessage(value,proto.protos.ChaincodeEndorsedAction.deserializeBinaryFromReader);
      msg.setAction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.ChaincodeActionPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.ChaincodeActionPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.ChaincodeActionPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.ChaincodeActionPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChaincodeProposalPayload_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getAction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.protos.ChaincodeEndorsedAction.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes chaincode_proposal_payload = 1;
 * @return {!(string|Uint8Array)}
 */
proto.protos.ChaincodeActionPayload.prototype.getChaincodeProposalPayload = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes chaincode_proposal_payload = 1;
 * This is a type-conversion wrapper around `getChaincodeProposalPayload()`
 * @return {string}
 */
proto.protos.ChaincodeActionPayload.prototype.getChaincodeProposalPayload_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChaincodeProposalPayload()));
};


/**
 * optional bytes chaincode_proposal_payload = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChaincodeProposalPayload()`
 * @return {!Uint8Array}
 */
proto.protos.ChaincodeActionPayload.prototype.getChaincodeProposalPayload_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChaincodeProposalPayload()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protos.ChaincodeActionPayload} returns this
 */
proto.protos.ChaincodeActionPayload.prototype.setChaincodeProposalPayload = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional ChaincodeEndorsedAction action = 2;
 * @return {?proto.protos.ChaincodeEndorsedAction}
 */
proto.protos.ChaincodeActionPayload.prototype.getAction = function() {
  return /** @type{?proto.protos.ChaincodeEndorsedAction} */ (
    jspb.Message.getWrapperField(this, proto.protos.ChaincodeEndorsedAction, 2));
};


/**
 * @param {?proto.protos.ChaincodeEndorsedAction|undefined} value
 * @return {!proto.protos.ChaincodeActionPayload} returns this
*/
proto.protos.ChaincodeActionPayload.prototype.setAction = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.ChaincodeActionPayload} returns this
 */
proto.protos.ChaincodeActionPayload.prototype.clearAction = function() {
  return this.setAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.ChaincodeActionPayload.prototype.hasAction = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protos.ChaincodeEndorsedAction.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.ChaincodeEndorsedAction.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.ChaincodeEndorsedAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.ChaincodeEndorsedAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.ChaincodeEndorsedAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    proposalResponsePayload: msg.getProposalResponsePayload_asB64(),
    endorsementsList: jspb.Message.toObjectList(msg.getEndorsementsList(),
    peer_proposal_response_pb.Endorsement.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.ChaincodeEndorsedAction}
 */
proto.protos.ChaincodeEndorsedAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.ChaincodeEndorsedAction;
  return proto.protos.ChaincodeEndorsedAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.ChaincodeEndorsedAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.ChaincodeEndorsedAction}
 */
proto.protos.ChaincodeEndorsedAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProposalResponsePayload(value);
      break;
    case 2:
      var value = new peer_proposal_response_pb.Endorsement;
      reader.readMessage(value,peer_proposal_response_pb.Endorsement.deserializeBinaryFromReader);
      msg.addEndorsements(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.ChaincodeEndorsedAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.ChaincodeEndorsedAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.ChaincodeEndorsedAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.ChaincodeEndorsedAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProposalResponsePayload_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getEndorsementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      peer_proposal_response_pb.Endorsement.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes proposal_response_payload = 1;
 * @return {!(string|Uint8Array)}
 */
proto.protos.ChaincodeEndorsedAction.prototype.getProposalResponsePayload = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes proposal_response_payload = 1;
 * This is a type-conversion wrapper around `getProposalResponsePayload()`
 * @return {string}
 */
proto.protos.ChaincodeEndorsedAction.prototype.getProposalResponsePayload_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProposalResponsePayload()));
};


/**
 * optional bytes proposal_response_payload = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProposalResponsePayload()`
 * @return {!Uint8Array}
 */
proto.protos.ChaincodeEndorsedAction.prototype.getProposalResponsePayload_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProposalResponsePayload()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protos.ChaincodeEndorsedAction} returns this
 */
proto.protos.ChaincodeEndorsedAction.prototype.setProposalResponsePayload = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * repeated Endorsement endorsements = 2;
 * @return {!Array<!proto.protos.Endorsement>}
 */
proto.protos.ChaincodeEndorsedAction.prototype.getEndorsementsList = function() {
  return /** @type{!Array<!proto.protos.Endorsement>} */ (
    jspb.Message.getRepeatedWrapperField(this, peer_proposal_response_pb.Endorsement, 2));
};


/**
 * @param {!Array<!proto.protos.Endorsement>} value
 * @return {!proto.protos.ChaincodeEndorsedAction} returns this
*/
proto.protos.ChaincodeEndorsedAction.prototype.setEndorsementsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.protos.Endorsement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protos.Endorsement}
 */
proto.protos.ChaincodeEndorsedAction.prototype.addEndorsements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.protos.Endorsement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protos.ChaincodeEndorsedAction} returns this
 */
proto.protos.ChaincodeEndorsedAction.prototype.clearEndorsementsList = function() {
  return this.setEndorsementsList([]);
};


/**
 * @enum {number}
 */
proto.protos.TxValidationCode = {
  VALID: 0,
  NIL_ENVELOPE: 1,
  BAD_PAYLOAD: 2,
  BAD_COMMON_HEADER: 3,
  BAD_CREATOR_SIGNATURE: 4,
  INVALID_ENDORSER_TRANSACTION: 5,
  INVALID_CONFIG_TRANSACTION: 6,
  UNSUPPORTED_TX_PAYLOAD: 7,
  BAD_PROPOSAL_TXID: 8,
  DUPLICATE_TXID: 9,
  ENDORSEMENT_POLICY_FAILURE: 10,
  MVCC_READ_CONFLICT: 11,
  PHANTOM_READ_CONFLICT: 12,
  UNKNOWN_TX_TYPE: 13,
  TARGET_CHAIN_NOT_FOUND: 14,
  MARSHAL_TX_ERROR: 15,
  NIL_TXACTION: 16,
  EXPIRED_CHAINCODE: 17,
  CHAINCODE_VERSION_CONFLICT: 18,
  BAD_HEADER_EXTENSION: 19,
  BAD_CHANNEL_HEADER: 20,
  BAD_RESPONSE_PAYLOAD: 21,
  BAD_RWSET: 22,
  ILLEGAL_WRITESET: 23,
  INVALID_WRITESET: 24,
  INVALID_CHAINCODE: 25,
  NOT_VALIDATED: 254,
  INVALID_OTHER_REASON: 255
};

/**
 * @enum {number}
 */
proto.protos.MetaDataKeys = {
  VALIDATION_PARAMETER: 0,
  VALIDATION_PARAMETER_V2: 1
};

goog.object.extend(exports, proto.protos);
