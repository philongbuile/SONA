// package: lifecycle
// file: peer/lifecycle/chaincode_definition.proto

import * as jspb from "google-protobuf";

export class ChaincodeEndorsementInfo extends jspb.Message {
  getVersion(): string;
  setVersion(value: string): void;

  getInitRequired(): boolean;
  setInitRequired(value: boolean): void;

  getEndorsementPlugin(): string;
  setEndorsementPlugin(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ChaincodeEndorsementInfo.AsObject;
  static toObject(includeInstance: boolean, msg: ChaincodeEndorsementInfo): ChaincodeEndorsementInfo.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ChaincodeEndorsementInfo, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ChaincodeEndorsementInfo;
  static deserializeBinaryFromReader(message: ChaincodeEndorsementInfo, reader: jspb.BinaryReader): ChaincodeEndorsementInfo;
}

export namespace ChaincodeEndorsementInfo {
  export type AsObject = {
    version: string,
    initRequired: boolean,
    endorsementPlugin: string,
  }
}

export class ChaincodeValidationInfo extends jspb.Message {
  getValidationPlugin(): string;
  setValidationPlugin(value: string): void;

  getValidationParameter(): Uint8Array | string;
  getValidationParameter_asU8(): Uint8Array;
  getValidationParameter_asB64(): string;
  setValidationParameter(value: Uint8Array | string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ChaincodeValidationInfo.AsObject;
  static toObject(includeInstance: boolean, msg: ChaincodeValidationInfo): ChaincodeValidationInfo.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ChaincodeValidationInfo, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ChaincodeValidationInfo;
  static deserializeBinaryFromReader(message: ChaincodeValidationInfo, reader: jspb.BinaryReader): ChaincodeValidationInfo;
}

export namespace ChaincodeValidationInfo {
  export type AsObject = {
    validationPlugin: string,
    validationParameter: Uint8Array | string,
  }
}

