// source: peer/lifecycle/lifecycle.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var peer_collection_pb = require('../../peer/collection_pb.js');
goog.object.extend(proto, peer_collection_pb);
goog.exportSymbol('proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs', null, global);
goog.exportSymbol('proto.lifecycle.ApproveChaincodeDefinitionForMyOrgResult', null, global);
goog.exportSymbol('proto.lifecycle.ChaincodeSource', null, global);
goog.exportSymbol('proto.lifecycle.ChaincodeSource.Local', null, global);
goog.exportSymbol('proto.lifecycle.ChaincodeSource.TypeCase', null, global);
goog.exportSymbol('proto.lifecycle.ChaincodeSource.Unavailable', null, global);
goog.exportSymbol('proto.lifecycle.CheckCommitReadinessArgs', null, global);
goog.exportSymbol('proto.lifecycle.CheckCommitReadinessResult', null, global);
goog.exportSymbol('proto.lifecycle.CommitChaincodeDefinitionArgs', null, global);
goog.exportSymbol('proto.lifecycle.CommitChaincodeDefinitionResult', null, global);
goog.exportSymbol('proto.lifecycle.GetInstalledChaincodePackageArgs', null, global);
goog.exportSymbol('proto.lifecycle.GetInstalledChaincodePackageResult', null, global);
goog.exportSymbol('proto.lifecycle.InstallChaincodeArgs', null, global);
goog.exportSymbol('proto.lifecycle.InstallChaincodeResult', null, global);
goog.exportSymbol('proto.lifecycle.QueryApprovedChaincodeDefinitionArgs', null, global);
goog.exportSymbol('proto.lifecycle.QueryApprovedChaincodeDefinitionResult', null, global);
goog.exportSymbol('proto.lifecycle.QueryChaincodeDefinitionArgs', null, global);
goog.exportSymbol('proto.lifecycle.QueryChaincodeDefinitionResult', null, global);
goog.exportSymbol('proto.lifecycle.QueryChaincodeDefinitionsArgs', null, global);
goog.exportSymbol('proto.lifecycle.QueryChaincodeDefinitionsResult', null, global);
goog.exportSymbol('proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition', null, global);
goog.exportSymbol('proto.lifecycle.QueryInstalledChaincodeArgs', null, global);
goog.exportSymbol('proto.lifecycle.QueryInstalledChaincodeResult', null, global);
goog.exportSymbol('proto.lifecycle.QueryInstalledChaincodeResult.Chaincode', null, global);
goog.exportSymbol('proto.lifecycle.QueryInstalledChaincodeResult.References', null, global);
goog.exportSymbol('proto.lifecycle.QueryInstalledChaincodesArgs', null, global);
goog.exportSymbol('proto.lifecycle.QueryInstalledChaincodesResult', null, global);
goog.exportSymbol('proto.lifecycle.QueryInstalledChaincodesResult.Chaincode', null, global);
goog.exportSymbol('proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode', null, global);
goog.exportSymbol('proto.lifecycle.QueryInstalledChaincodesResult.References', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.InstallChaincodeArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lifecycle.InstallChaincodeArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.InstallChaincodeArgs.displayName = 'proto.lifecycle.InstallChaincodeArgs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.InstallChaincodeResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lifecycle.InstallChaincodeResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.InstallChaincodeResult.displayName = 'proto.lifecycle.InstallChaincodeResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.QueryInstalledChaincodeArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lifecycle.QueryInstalledChaincodeArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.QueryInstalledChaincodeArgs.displayName = 'proto.lifecycle.QueryInstalledChaincodeArgs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.QueryInstalledChaincodeResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lifecycle.QueryInstalledChaincodeResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.QueryInstalledChaincodeResult.displayName = 'proto.lifecycle.QueryInstalledChaincodeResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.QueryInstalledChaincodeResult.References = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.lifecycle.QueryInstalledChaincodeResult.References.repeatedFields_, null);
};
goog.inherits(proto.lifecycle.QueryInstalledChaincodeResult.References, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.QueryInstalledChaincodeResult.References.displayName = 'proto.lifecycle.QueryInstalledChaincodeResult.References';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.QueryInstalledChaincodeResult.Chaincode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lifecycle.QueryInstalledChaincodeResult.Chaincode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.QueryInstalledChaincodeResult.Chaincode.displayName = 'proto.lifecycle.QueryInstalledChaincodeResult.Chaincode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.GetInstalledChaincodePackageArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lifecycle.GetInstalledChaincodePackageArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.GetInstalledChaincodePackageArgs.displayName = 'proto.lifecycle.GetInstalledChaincodePackageArgs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.GetInstalledChaincodePackageResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lifecycle.GetInstalledChaincodePackageResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.GetInstalledChaincodePackageResult.displayName = 'proto.lifecycle.GetInstalledChaincodePackageResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.QueryInstalledChaincodesArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lifecycle.QueryInstalledChaincodesArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.QueryInstalledChaincodesArgs.displayName = 'proto.lifecycle.QueryInstalledChaincodesArgs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.QueryInstalledChaincodesResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.lifecycle.QueryInstalledChaincodesResult.repeatedFields_, null);
};
goog.inherits(proto.lifecycle.QueryInstalledChaincodesResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.QueryInstalledChaincodesResult.displayName = 'proto.lifecycle.QueryInstalledChaincodesResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode.displayName = 'proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.QueryInstalledChaincodesResult.References = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.lifecycle.QueryInstalledChaincodesResult.References.repeatedFields_, null);
};
goog.inherits(proto.lifecycle.QueryInstalledChaincodesResult.References, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.QueryInstalledChaincodesResult.References.displayName = 'proto.lifecycle.QueryInstalledChaincodesResult.References';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.QueryInstalledChaincodesResult.Chaincode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lifecycle.QueryInstalledChaincodesResult.Chaincode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.QueryInstalledChaincodesResult.Chaincode.displayName = 'proto.lifecycle.QueryInstalledChaincodesResult.Chaincode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.displayName = 'proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.ChaincodeSource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lifecycle.ChaincodeSource.oneofGroups_);
};
goog.inherits(proto.lifecycle.ChaincodeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.ChaincodeSource.displayName = 'proto.lifecycle.ChaincodeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.ChaincodeSource.Unavailable = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lifecycle.ChaincodeSource.Unavailable, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.ChaincodeSource.Unavailable.displayName = 'proto.lifecycle.ChaincodeSource.Unavailable';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.ChaincodeSource.Local = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lifecycle.ChaincodeSource.Local, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.ChaincodeSource.Local.displayName = 'proto.lifecycle.ChaincodeSource.Local';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lifecycle.ApproveChaincodeDefinitionForMyOrgResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.ApproveChaincodeDefinitionForMyOrgResult.displayName = 'proto.lifecycle.ApproveChaincodeDefinitionForMyOrgResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.CommitChaincodeDefinitionArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lifecycle.CommitChaincodeDefinitionArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.CommitChaincodeDefinitionArgs.displayName = 'proto.lifecycle.CommitChaincodeDefinitionArgs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.CommitChaincodeDefinitionResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lifecycle.CommitChaincodeDefinitionResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.CommitChaincodeDefinitionResult.displayName = 'proto.lifecycle.CommitChaincodeDefinitionResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.CheckCommitReadinessArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lifecycle.CheckCommitReadinessArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.CheckCommitReadinessArgs.displayName = 'proto.lifecycle.CheckCommitReadinessArgs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.CheckCommitReadinessResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lifecycle.CheckCommitReadinessResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.CheckCommitReadinessResult.displayName = 'proto.lifecycle.CheckCommitReadinessResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lifecycle.QueryApprovedChaincodeDefinitionArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.QueryApprovedChaincodeDefinitionArgs.displayName = 'proto.lifecycle.QueryApprovedChaincodeDefinitionArgs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lifecycle.QueryApprovedChaincodeDefinitionResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.QueryApprovedChaincodeDefinitionResult.displayName = 'proto.lifecycle.QueryApprovedChaincodeDefinitionResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.QueryChaincodeDefinitionArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lifecycle.QueryChaincodeDefinitionArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.QueryChaincodeDefinitionArgs.displayName = 'proto.lifecycle.QueryChaincodeDefinitionArgs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.QueryChaincodeDefinitionResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lifecycle.QueryChaincodeDefinitionResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.QueryChaincodeDefinitionResult.displayName = 'proto.lifecycle.QueryChaincodeDefinitionResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.QueryChaincodeDefinitionsArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lifecycle.QueryChaincodeDefinitionsArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.QueryChaincodeDefinitionsArgs.displayName = 'proto.lifecycle.QueryChaincodeDefinitionsArgs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.QueryChaincodeDefinitionsResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.lifecycle.QueryChaincodeDefinitionsResult.repeatedFields_, null);
};
goog.inherits(proto.lifecycle.QueryChaincodeDefinitionsResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.QueryChaincodeDefinitionsResult.displayName = 'proto.lifecycle.QueryChaincodeDefinitionsResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.displayName = 'proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.InstallChaincodeArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.InstallChaincodeArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.InstallChaincodeArgs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.InstallChaincodeArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    chaincodeInstallPackage: msg.getChaincodeInstallPackage_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.InstallChaincodeArgs}
 */
proto.lifecycle.InstallChaincodeArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.InstallChaincodeArgs;
  return proto.lifecycle.InstallChaincodeArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.InstallChaincodeArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.InstallChaincodeArgs}
 */
proto.lifecycle.InstallChaincodeArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChaincodeInstallPackage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.InstallChaincodeArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.InstallChaincodeArgs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.InstallChaincodeArgs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.InstallChaincodeArgs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChaincodeInstallPackage_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes chaincode_install_package = 1;
 * @return {!(string|Uint8Array)}
 */
proto.lifecycle.InstallChaincodeArgs.prototype.getChaincodeInstallPackage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes chaincode_install_package = 1;
 * This is a type-conversion wrapper around `getChaincodeInstallPackage()`
 * @return {string}
 */
proto.lifecycle.InstallChaincodeArgs.prototype.getChaincodeInstallPackage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChaincodeInstallPackage()));
};


/**
 * optional bytes chaincode_install_package = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChaincodeInstallPackage()`
 * @return {!Uint8Array}
 */
proto.lifecycle.InstallChaincodeArgs.prototype.getChaincodeInstallPackage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChaincodeInstallPackage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.lifecycle.InstallChaincodeArgs} returns this
 */
proto.lifecycle.InstallChaincodeArgs.prototype.setChaincodeInstallPackage = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.InstallChaincodeResult.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.InstallChaincodeResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.InstallChaincodeResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.InstallChaincodeResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    packageId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.InstallChaincodeResult}
 */
proto.lifecycle.InstallChaincodeResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.InstallChaincodeResult;
  return proto.lifecycle.InstallChaincodeResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.InstallChaincodeResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.InstallChaincodeResult}
 */
proto.lifecycle.InstallChaincodeResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPackageId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.InstallChaincodeResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.InstallChaincodeResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.InstallChaincodeResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.InstallChaincodeResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPackageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string package_id = 1;
 * @return {string}
 */
proto.lifecycle.InstallChaincodeResult.prototype.getPackageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.InstallChaincodeResult} returns this
 */
proto.lifecycle.InstallChaincodeResult.prototype.setPackageId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.lifecycle.InstallChaincodeResult.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.InstallChaincodeResult} returns this
 */
proto.lifecycle.InstallChaincodeResult.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.QueryInstalledChaincodeArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.QueryInstalledChaincodeArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.QueryInstalledChaincodeArgs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryInstalledChaincodeArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    packageId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.QueryInstalledChaincodeArgs}
 */
proto.lifecycle.QueryInstalledChaincodeArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.QueryInstalledChaincodeArgs;
  return proto.lifecycle.QueryInstalledChaincodeArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.QueryInstalledChaincodeArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.QueryInstalledChaincodeArgs}
 */
proto.lifecycle.QueryInstalledChaincodeArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPackageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.QueryInstalledChaincodeArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.QueryInstalledChaincodeArgs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.QueryInstalledChaincodeArgs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryInstalledChaincodeArgs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPackageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string package_id = 1;
 * @return {string}
 */
proto.lifecycle.QueryInstalledChaincodeArgs.prototype.getPackageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.QueryInstalledChaincodeArgs} returns this
 */
proto.lifecycle.QueryInstalledChaincodeArgs.prototype.setPackageId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.QueryInstalledChaincodeResult.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.QueryInstalledChaincodeResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.QueryInstalledChaincodeResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryInstalledChaincodeResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    packageId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    referencesMap: (f = msg.getReferencesMap()) ? f.toObject(includeInstance, proto.lifecycle.QueryInstalledChaincodeResult.References.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.QueryInstalledChaincodeResult}
 */
proto.lifecycle.QueryInstalledChaincodeResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.QueryInstalledChaincodeResult;
  return proto.lifecycle.QueryInstalledChaincodeResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.QueryInstalledChaincodeResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.QueryInstalledChaincodeResult}
 */
proto.lifecycle.QueryInstalledChaincodeResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPackageId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = msg.getReferencesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.lifecycle.QueryInstalledChaincodeResult.References.deserializeBinaryFromReader, "", new proto.lifecycle.QueryInstalledChaincodeResult.References());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.QueryInstalledChaincodeResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.QueryInstalledChaincodeResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.QueryInstalledChaincodeResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryInstalledChaincodeResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPackageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReferencesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.lifecycle.QueryInstalledChaincodeResult.References.serializeBinaryToWriter);
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.lifecycle.QueryInstalledChaincodeResult.References.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.QueryInstalledChaincodeResult.References.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.QueryInstalledChaincodeResult.References.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.QueryInstalledChaincodeResult.References} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryInstalledChaincodeResult.References.toObject = function(includeInstance, msg) {
  var f, obj = {
    chaincodesList: jspb.Message.toObjectList(msg.getChaincodesList(),
    proto.lifecycle.QueryInstalledChaincodeResult.Chaincode.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.QueryInstalledChaincodeResult.References}
 */
proto.lifecycle.QueryInstalledChaincodeResult.References.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.QueryInstalledChaincodeResult.References;
  return proto.lifecycle.QueryInstalledChaincodeResult.References.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.QueryInstalledChaincodeResult.References} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.QueryInstalledChaincodeResult.References}
 */
proto.lifecycle.QueryInstalledChaincodeResult.References.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.lifecycle.QueryInstalledChaincodeResult.Chaincode;
      reader.readMessage(value,proto.lifecycle.QueryInstalledChaincodeResult.Chaincode.deserializeBinaryFromReader);
      msg.addChaincodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.QueryInstalledChaincodeResult.References.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.QueryInstalledChaincodeResult.References.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.QueryInstalledChaincodeResult.References} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryInstalledChaincodeResult.References.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChaincodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.lifecycle.QueryInstalledChaincodeResult.Chaincode.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Chaincode chaincodes = 1;
 * @return {!Array<!proto.lifecycle.QueryInstalledChaincodeResult.Chaincode>}
 */
proto.lifecycle.QueryInstalledChaincodeResult.References.prototype.getChaincodesList = function() {
  return /** @type{!Array<!proto.lifecycle.QueryInstalledChaincodeResult.Chaincode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.lifecycle.QueryInstalledChaincodeResult.Chaincode, 1));
};


/**
 * @param {!Array<!proto.lifecycle.QueryInstalledChaincodeResult.Chaincode>} value
 * @return {!proto.lifecycle.QueryInstalledChaincodeResult.References} returns this
*/
proto.lifecycle.QueryInstalledChaincodeResult.References.prototype.setChaincodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.lifecycle.QueryInstalledChaincodeResult.Chaincode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.lifecycle.QueryInstalledChaincodeResult.Chaincode}
 */
proto.lifecycle.QueryInstalledChaincodeResult.References.prototype.addChaincodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lifecycle.QueryInstalledChaincodeResult.Chaincode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.lifecycle.QueryInstalledChaincodeResult.References} returns this
 */
proto.lifecycle.QueryInstalledChaincodeResult.References.prototype.clearChaincodesList = function() {
  return this.setChaincodesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.QueryInstalledChaincodeResult.Chaincode.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.QueryInstalledChaincodeResult.Chaincode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.QueryInstalledChaincodeResult.Chaincode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryInstalledChaincodeResult.Chaincode.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    version: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.QueryInstalledChaincodeResult.Chaincode}
 */
proto.lifecycle.QueryInstalledChaincodeResult.Chaincode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.QueryInstalledChaincodeResult.Chaincode;
  return proto.lifecycle.QueryInstalledChaincodeResult.Chaincode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.QueryInstalledChaincodeResult.Chaincode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.QueryInstalledChaincodeResult.Chaincode}
 */
proto.lifecycle.QueryInstalledChaincodeResult.Chaincode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.QueryInstalledChaincodeResult.Chaincode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.QueryInstalledChaincodeResult.Chaincode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.QueryInstalledChaincodeResult.Chaincode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryInstalledChaincodeResult.Chaincode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.lifecycle.QueryInstalledChaincodeResult.Chaincode.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.QueryInstalledChaincodeResult.Chaincode} returns this
 */
proto.lifecycle.QueryInstalledChaincodeResult.Chaincode.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string version = 2;
 * @return {string}
 */
proto.lifecycle.QueryInstalledChaincodeResult.Chaincode.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.QueryInstalledChaincodeResult.Chaincode} returns this
 */
proto.lifecycle.QueryInstalledChaincodeResult.Chaincode.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string package_id = 1;
 * @return {string}
 */
proto.lifecycle.QueryInstalledChaincodeResult.prototype.getPackageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.QueryInstalledChaincodeResult} returns this
 */
proto.lifecycle.QueryInstalledChaincodeResult.prototype.setPackageId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.lifecycle.QueryInstalledChaincodeResult.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.QueryInstalledChaincodeResult} returns this
 */
proto.lifecycle.QueryInstalledChaincodeResult.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, References> references = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.lifecycle.QueryInstalledChaincodeResult.References>}
 */
proto.lifecycle.QueryInstalledChaincodeResult.prototype.getReferencesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.lifecycle.QueryInstalledChaincodeResult.References>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.lifecycle.QueryInstalledChaincodeResult.References));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.lifecycle.QueryInstalledChaincodeResult} returns this
 */
proto.lifecycle.QueryInstalledChaincodeResult.prototype.clearReferencesMap = function() {
  this.getReferencesMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.GetInstalledChaincodePackageArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.GetInstalledChaincodePackageArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.GetInstalledChaincodePackageArgs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.GetInstalledChaincodePackageArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    packageId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.GetInstalledChaincodePackageArgs}
 */
proto.lifecycle.GetInstalledChaincodePackageArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.GetInstalledChaincodePackageArgs;
  return proto.lifecycle.GetInstalledChaincodePackageArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.GetInstalledChaincodePackageArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.GetInstalledChaincodePackageArgs}
 */
proto.lifecycle.GetInstalledChaincodePackageArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPackageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.GetInstalledChaincodePackageArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.GetInstalledChaincodePackageArgs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.GetInstalledChaincodePackageArgs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.GetInstalledChaincodePackageArgs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPackageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string package_id = 1;
 * @return {string}
 */
proto.lifecycle.GetInstalledChaincodePackageArgs.prototype.getPackageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.GetInstalledChaincodePackageArgs} returns this
 */
proto.lifecycle.GetInstalledChaincodePackageArgs.prototype.setPackageId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.GetInstalledChaincodePackageResult.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.GetInstalledChaincodePackageResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.GetInstalledChaincodePackageResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.GetInstalledChaincodePackageResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    chaincodeInstallPackage: msg.getChaincodeInstallPackage_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.GetInstalledChaincodePackageResult}
 */
proto.lifecycle.GetInstalledChaincodePackageResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.GetInstalledChaincodePackageResult;
  return proto.lifecycle.GetInstalledChaincodePackageResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.GetInstalledChaincodePackageResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.GetInstalledChaincodePackageResult}
 */
proto.lifecycle.GetInstalledChaincodePackageResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChaincodeInstallPackage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.GetInstalledChaincodePackageResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.GetInstalledChaincodePackageResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.GetInstalledChaincodePackageResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.GetInstalledChaincodePackageResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChaincodeInstallPackage_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes chaincode_install_package = 1;
 * @return {!(string|Uint8Array)}
 */
proto.lifecycle.GetInstalledChaincodePackageResult.prototype.getChaincodeInstallPackage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes chaincode_install_package = 1;
 * This is a type-conversion wrapper around `getChaincodeInstallPackage()`
 * @return {string}
 */
proto.lifecycle.GetInstalledChaincodePackageResult.prototype.getChaincodeInstallPackage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChaincodeInstallPackage()));
};


/**
 * optional bytes chaincode_install_package = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChaincodeInstallPackage()`
 * @return {!Uint8Array}
 */
proto.lifecycle.GetInstalledChaincodePackageResult.prototype.getChaincodeInstallPackage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChaincodeInstallPackage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.lifecycle.GetInstalledChaincodePackageResult} returns this
 */
proto.lifecycle.GetInstalledChaincodePackageResult.prototype.setChaincodeInstallPackage = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.QueryInstalledChaincodesArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.QueryInstalledChaincodesArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.QueryInstalledChaincodesArgs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryInstalledChaincodesArgs.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.QueryInstalledChaincodesArgs}
 */
proto.lifecycle.QueryInstalledChaincodesArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.QueryInstalledChaincodesArgs;
  return proto.lifecycle.QueryInstalledChaincodesArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.QueryInstalledChaincodesArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.QueryInstalledChaincodesArgs}
 */
proto.lifecycle.QueryInstalledChaincodesArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.QueryInstalledChaincodesArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.QueryInstalledChaincodesArgs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.QueryInstalledChaincodesArgs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryInstalledChaincodesArgs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.lifecycle.QueryInstalledChaincodesResult.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.QueryInstalledChaincodesResult.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.QueryInstalledChaincodesResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.QueryInstalledChaincodesResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryInstalledChaincodesResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    installedChaincodesList: jspb.Message.toObjectList(msg.getInstalledChaincodesList(),
    proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.QueryInstalledChaincodesResult}
 */
proto.lifecycle.QueryInstalledChaincodesResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.QueryInstalledChaincodesResult;
  return proto.lifecycle.QueryInstalledChaincodesResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.QueryInstalledChaincodesResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.QueryInstalledChaincodesResult}
 */
proto.lifecycle.QueryInstalledChaincodesResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode;
      reader.readMessage(value,proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode.deserializeBinaryFromReader);
      msg.addInstalledChaincodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.QueryInstalledChaincodesResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.QueryInstalledChaincodesResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.QueryInstalledChaincodesResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryInstalledChaincodesResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstalledChaincodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode.toObject = function(includeInstance, msg) {
  var f, obj = {
    packageId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    referencesMap: (f = msg.getReferencesMap()) ? f.toObject(includeInstance, proto.lifecycle.QueryInstalledChaincodesResult.References.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode}
 */
proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode;
  return proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode}
 */
proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPackageId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = msg.getReferencesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.lifecycle.QueryInstalledChaincodesResult.References.deserializeBinaryFromReader, "", new proto.lifecycle.QueryInstalledChaincodesResult.References());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPackageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReferencesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.lifecycle.QueryInstalledChaincodesResult.References.serializeBinaryToWriter);
  }
};


/**
 * optional string package_id = 1;
 * @return {string}
 */
proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode.prototype.getPackageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode} returns this
 */
proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode.prototype.setPackageId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode} returns this
 */
proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, References> references = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.lifecycle.QueryInstalledChaincodesResult.References>}
 */
proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode.prototype.getReferencesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.lifecycle.QueryInstalledChaincodesResult.References>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.lifecycle.QueryInstalledChaincodesResult.References));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode} returns this
 */
proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode.prototype.clearReferencesMap = function() {
  this.getReferencesMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.lifecycle.QueryInstalledChaincodesResult.References.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.QueryInstalledChaincodesResult.References.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.QueryInstalledChaincodesResult.References.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.QueryInstalledChaincodesResult.References} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryInstalledChaincodesResult.References.toObject = function(includeInstance, msg) {
  var f, obj = {
    chaincodesList: jspb.Message.toObjectList(msg.getChaincodesList(),
    proto.lifecycle.QueryInstalledChaincodesResult.Chaincode.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.QueryInstalledChaincodesResult.References}
 */
proto.lifecycle.QueryInstalledChaincodesResult.References.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.QueryInstalledChaincodesResult.References;
  return proto.lifecycle.QueryInstalledChaincodesResult.References.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.QueryInstalledChaincodesResult.References} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.QueryInstalledChaincodesResult.References}
 */
proto.lifecycle.QueryInstalledChaincodesResult.References.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.lifecycle.QueryInstalledChaincodesResult.Chaincode;
      reader.readMessage(value,proto.lifecycle.QueryInstalledChaincodesResult.Chaincode.deserializeBinaryFromReader);
      msg.addChaincodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.QueryInstalledChaincodesResult.References.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.QueryInstalledChaincodesResult.References.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.QueryInstalledChaincodesResult.References} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryInstalledChaincodesResult.References.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChaincodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.lifecycle.QueryInstalledChaincodesResult.Chaincode.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Chaincode chaincodes = 1;
 * @return {!Array<!proto.lifecycle.QueryInstalledChaincodesResult.Chaincode>}
 */
proto.lifecycle.QueryInstalledChaincodesResult.References.prototype.getChaincodesList = function() {
  return /** @type{!Array<!proto.lifecycle.QueryInstalledChaincodesResult.Chaincode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.lifecycle.QueryInstalledChaincodesResult.Chaincode, 1));
};


/**
 * @param {!Array<!proto.lifecycle.QueryInstalledChaincodesResult.Chaincode>} value
 * @return {!proto.lifecycle.QueryInstalledChaincodesResult.References} returns this
*/
proto.lifecycle.QueryInstalledChaincodesResult.References.prototype.setChaincodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.lifecycle.QueryInstalledChaincodesResult.Chaincode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.lifecycle.QueryInstalledChaincodesResult.Chaincode}
 */
proto.lifecycle.QueryInstalledChaincodesResult.References.prototype.addChaincodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lifecycle.QueryInstalledChaincodesResult.Chaincode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.lifecycle.QueryInstalledChaincodesResult.References} returns this
 */
proto.lifecycle.QueryInstalledChaincodesResult.References.prototype.clearChaincodesList = function() {
  return this.setChaincodesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.QueryInstalledChaincodesResult.Chaincode.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.QueryInstalledChaincodesResult.Chaincode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.QueryInstalledChaincodesResult.Chaincode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryInstalledChaincodesResult.Chaincode.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    version: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.QueryInstalledChaincodesResult.Chaincode}
 */
proto.lifecycle.QueryInstalledChaincodesResult.Chaincode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.QueryInstalledChaincodesResult.Chaincode;
  return proto.lifecycle.QueryInstalledChaincodesResult.Chaincode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.QueryInstalledChaincodesResult.Chaincode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.QueryInstalledChaincodesResult.Chaincode}
 */
proto.lifecycle.QueryInstalledChaincodesResult.Chaincode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.QueryInstalledChaincodesResult.Chaincode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.QueryInstalledChaincodesResult.Chaincode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.QueryInstalledChaincodesResult.Chaincode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryInstalledChaincodesResult.Chaincode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.lifecycle.QueryInstalledChaincodesResult.Chaincode.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.QueryInstalledChaincodesResult.Chaincode} returns this
 */
proto.lifecycle.QueryInstalledChaincodesResult.Chaincode.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string version = 2;
 * @return {string}
 */
proto.lifecycle.QueryInstalledChaincodesResult.Chaincode.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.QueryInstalledChaincodesResult.Chaincode} returns this
 */
proto.lifecycle.QueryInstalledChaincodesResult.Chaincode.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated InstalledChaincode installed_chaincodes = 1;
 * @return {!Array<!proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode>}
 */
proto.lifecycle.QueryInstalledChaincodesResult.prototype.getInstalledChaincodesList = function() {
  return /** @type{!Array<!proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode, 1));
};


/**
 * @param {!Array<!proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode>} value
 * @return {!proto.lifecycle.QueryInstalledChaincodesResult} returns this
*/
proto.lifecycle.QueryInstalledChaincodesResult.prototype.setInstalledChaincodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode}
 */
proto.lifecycle.QueryInstalledChaincodesResult.prototype.addInstalledChaincodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lifecycle.QueryInstalledChaincodesResult.InstalledChaincode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.lifecycle.QueryInstalledChaincodesResult} returns this
 */
proto.lifecycle.QueryInstalledChaincodesResult.prototype.clearInstalledChaincodesList = function() {
  return this.setInstalledChaincodesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequence: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    version: jspb.Message.getFieldWithDefault(msg, 3, ""),
    endorsementPlugin: jspb.Message.getFieldWithDefault(msg, 4, ""),
    validationPlugin: jspb.Message.getFieldWithDefault(msg, 5, ""),
    validationParameter: msg.getValidationParameter_asB64(),
    collections: (f = msg.getCollections()) && peer_collection_pb.CollectionConfigPackage.toObject(includeInstance, f),
    initRequired: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    source: (f = msg.getSource()) && proto.lifecycle.ChaincodeSource.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs}
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs;
  return proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs}
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSequence(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndorsementPlugin(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidationPlugin(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValidationParameter(value);
      break;
    case 7:
      var value = new peer_collection_pb.CollectionConfigPackage;
      reader.readMessage(value,peer_collection_pb.CollectionConfigPackage.deserializeBinaryFromReader);
      msg.setCollections(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInitRequired(value);
      break;
    case 9:
      var value = new proto.lifecycle.ChaincodeSource;
      reader.readMessage(value,proto.lifecycle.ChaincodeSource.deserializeBinaryFromReader);
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequence();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEndorsementPlugin();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getValidationPlugin();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getValidationParameter_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getCollections();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      peer_collection_pb.CollectionConfigPackage.serializeBinaryToWriter
    );
  }
  f = message.getInitRequired();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getSource();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.lifecycle.ChaincodeSource.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 sequence = 1;
 * @return {number}
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs} returns this
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs} returns this
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string version = 3;
 * @return {string}
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs} returns this
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string endorsement_plugin = 4;
 * @return {string}
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.getEndorsementPlugin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs} returns this
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.setEndorsementPlugin = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string validation_plugin = 5;
 * @return {string}
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.getValidationPlugin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs} returns this
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.setValidationPlugin = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bytes validation_parameter = 6;
 * @return {!(string|Uint8Array)}
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.getValidationParameter = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes validation_parameter = 6;
 * This is a type-conversion wrapper around `getValidationParameter()`
 * @return {string}
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.getValidationParameter_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValidationParameter()));
};


/**
 * optional bytes validation_parameter = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValidationParameter()`
 * @return {!Uint8Array}
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.getValidationParameter_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValidationParameter()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs} returns this
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.setValidationParameter = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional protos.CollectionConfigPackage collections = 7;
 * @return {?proto.protos.CollectionConfigPackage}
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.getCollections = function() {
  return /** @type{?proto.protos.CollectionConfigPackage} */ (
    jspb.Message.getWrapperField(this, peer_collection_pb.CollectionConfigPackage, 7));
};


/**
 * @param {?proto.protos.CollectionConfigPackage|undefined} value
 * @return {!proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs} returns this
*/
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.setCollections = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs} returns this
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.clearCollections = function() {
  return this.setCollections(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.hasCollections = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool init_required = 8;
 * @return {boolean}
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.getInitRequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs} returns this
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.setInitRequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional ChaincodeSource source = 9;
 * @return {?proto.lifecycle.ChaincodeSource}
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.getSource = function() {
  return /** @type{?proto.lifecycle.ChaincodeSource} */ (
    jspb.Message.getWrapperField(this, proto.lifecycle.ChaincodeSource, 9));
};


/**
 * @param {?proto.lifecycle.ChaincodeSource|undefined} value
 * @return {!proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs} returns this
*/
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.setSource = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs} returns this
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.clearSource = function() {
  return this.setSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.prototype.hasSource = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.lifecycle.ChaincodeSource.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.lifecycle.ChaincodeSource.TypeCase = {
  TYPE_NOT_SET: 0,
  UNAVAILABLE: 1,
  LOCAL_PACKAGE: 2
};

/**
 * @return {proto.lifecycle.ChaincodeSource.TypeCase}
 */
proto.lifecycle.ChaincodeSource.prototype.getTypeCase = function() {
  return /** @type {proto.lifecycle.ChaincodeSource.TypeCase} */(jspb.Message.computeOneofCase(this, proto.lifecycle.ChaincodeSource.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.ChaincodeSource.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.ChaincodeSource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.ChaincodeSource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.ChaincodeSource.toObject = function(includeInstance, msg) {
  var f, obj = {
    unavailable: (f = msg.getUnavailable()) && proto.lifecycle.ChaincodeSource.Unavailable.toObject(includeInstance, f),
    localPackage: (f = msg.getLocalPackage()) && proto.lifecycle.ChaincodeSource.Local.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.ChaincodeSource}
 */
proto.lifecycle.ChaincodeSource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.ChaincodeSource;
  return proto.lifecycle.ChaincodeSource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.ChaincodeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.ChaincodeSource}
 */
proto.lifecycle.ChaincodeSource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.lifecycle.ChaincodeSource.Unavailable;
      reader.readMessage(value,proto.lifecycle.ChaincodeSource.Unavailable.deserializeBinaryFromReader);
      msg.setUnavailable(value);
      break;
    case 2:
      var value = new proto.lifecycle.ChaincodeSource.Local;
      reader.readMessage(value,proto.lifecycle.ChaincodeSource.Local.deserializeBinaryFromReader);
      msg.setLocalPackage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.ChaincodeSource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.ChaincodeSource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.ChaincodeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.ChaincodeSource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnavailable();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.lifecycle.ChaincodeSource.Unavailable.serializeBinaryToWriter
    );
  }
  f = message.getLocalPackage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.lifecycle.ChaincodeSource.Local.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.ChaincodeSource.Unavailable.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.ChaincodeSource.Unavailable.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.ChaincodeSource.Unavailable} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.ChaincodeSource.Unavailable.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.ChaincodeSource.Unavailable}
 */
proto.lifecycle.ChaincodeSource.Unavailable.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.ChaincodeSource.Unavailable;
  return proto.lifecycle.ChaincodeSource.Unavailable.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.ChaincodeSource.Unavailable} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.ChaincodeSource.Unavailable}
 */
proto.lifecycle.ChaincodeSource.Unavailable.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.ChaincodeSource.Unavailable.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.ChaincodeSource.Unavailable.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.ChaincodeSource.Unavailable} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.ChaincodeSource.Unavailable.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.ChaincodeSource.Local.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.ChaincodeSource.Local.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.ChaincodeSource.Local} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.ChaincodeSource.Local.toObject = function(includeInstance, msg) {
  var f, obj = {
    packageId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.ChaincodeSource.Local}
 */
proto.lifecycle.ChaincodeSource.Local.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.ChaincodeSource.Local;
  return proto.lifecycle.ChaincodeSource.Local.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.ChaincodeSource.Local} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.ChaincodeSource.Local}
 */
proto.lifecycle.ChaincodeSource.Local.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPackageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.ChaincodeSource.Local.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.ChaincodeSource.Local.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.ChaincodeSource.Local} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.ChaincodeSource.Local.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPackageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string package_id = 1;
 * @return {string}
 */
proto.lifecycle.ChaincodeSource.Local.prototype.getPackageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.ChaincodeSource.Local} returns this
 */
proto.lifecycle.ChaincodeSource.Local.prototype.setPackageId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Unavailable unavailable = 1;
 * @return {?proto.lifecycle.ChaincodeSource.Unavailable}
 */
proto.lifecycle.ChaincodeSource.prototype.getUnavailable = function() {
  return /** @type{?proto.lifecycle.ChaincodeSource.Unavailable} */ (
    jspb.Message.getWrapperField(this, proto.lifecycle.ChaincodeSource.Unavailable, 1));
};


/**
 * @param {?proto.lifecycle.ChaincodeSource.Unavailable|undefined} value
 * @return {!proto.lifecycle.ChaincodeSource} returns this
*/
proto.lifecycle.ChaincodeSource.prototype.setUnavailable = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.lifecycle.ChaincodeSource.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lifecycle.ChaincodeSource} returns this
 */
proto.lifecycle.ChaincodeSource.prototype.clearUnavailable = function() {
  return this.setUnavailable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lifecycle.ChaincodeSource.prototype.hasUnavailable = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Local local_package = 2;
 * @return {?proto.lifecycle.ChaincodeSource.Local}
 */
proto.lifecycle.ChaincodeSource.prototype.getLocalPackage = function() {
  return /** @type{?proto.lifecycle.ChaincodeSource.Local} */ (
    jspb.Message.getWrapperField(this, proto.lifecycle.ChaincodeSource.Local, 2));
};


/**
 * @param {?proto.lifecycle.ChaincodeSource.Local|undefined} value
 * @return {!proto.lifecycle.ChaincodeSource} returns this
*/
proto.lifecycle.ChaincodeSource.prototype.setLocalPackage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.lifecycle.ChaincodeSource.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lifecycle.ChaincodeSource} returns this
 */
proto.lifecycle.ChaincodeSource.prototype.clearLocalPackage = function() {
  return this.setLocalPackage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lifecycle.ChaincodeSource.prototype.hasLocalPackage = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgResult.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.ApproveChaincodeDefinitionForMyOrgResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.ApproveChaincodeDefinitionForMyOrgResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgResult.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.ApproveChaincodeDefinitionForMyOrgResult}
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.ApproveChaincodeDefinitionForMyOrgResult;
  return proto.lifecycle.ApproveChaincodeDefinitionForMyOrgResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.ApproveChaincodeDefinitionForMyOrgResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.ApproveChaincodeDefinitionForMyOrgResult}
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.ApproveChaincodeDefinitionForMyOrgResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.ApproveChaincodeDefinitionForMyOrgResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.ApproveChaincodeDefinitionForMyOrgResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.CommitChaincodeDefinitionArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.CommitChaincodeDefinitionArgs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequence: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    version: jspb.Message.getFieldWithDefault(msg, 3, ""),
    endorsementPlugin: jspb.Message.getFieldWithDefault(msg, 4, ""),
    validationPlugin: jspb.Message.getFieldWithDefault(msg, 5, ""),
    validationParameter: msg.getValidationParameter_asB64(),
    collections: (f = msg.getCollections()) && peer_collection_pb.CollectionConfigPackage.toObject(includeInstance, f),
    initRequired: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.CommitChaincodeDefinitionArgs}
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.CommitChaincodeDefinitionArgs;
  return proto.lifecycle.CommitChaincodeDefinitionArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.CommitChaincodeDefinitionArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.CommitChaincodeDefinitionArgs}
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSequence(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndorsementPlugin(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidationPlugin(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValidationParameter(value);
      break;
    case 7:
      var value = new peer_collection_pb.CollectionConfigPackage;
      reader.readMessage(value,peer_collection_pb.CollectionConfigPackage.deserializeBinaryFromReader);
      msg.setCollections(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInitRequired(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.CommitChaincodeDefinitionArgs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.CommitChaincodeDefinitionArgs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequence();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEndorsementPlugin();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getValidationPlugin();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getValidationParameter_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getCollections();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      peer_collection_pb.CollectionConfigPackage.serializeBinaryToWriter
    );
  }
  f = message.getInitRequired();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional int64 sequence = 1;
 * @return {number}
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.lifecycle.CommitChaincodeDefinitionArgs} returns this
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.CommitChaincodeDefinitionArgs} returns this
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string version = 3;
 * @return {string}
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.CommitChaincodeDefinitionArgs} returns this
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string endorsement_plugin = 4;
 * @return {string}
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.prototype.getEndorsementPlugin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.CommitChaincodeDefinitionArgs} returns this
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.prototype.setEndorsementPlugin = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string validation_plugin = 5;
 * @return {string}
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.prototype.getValidationPlugin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.CommitChaincodeDefinitionArgs} returns this
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.prototype.setValidationPlugin = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bytes validation_parameter = 6;
 * @return {!(string|Uint8Array)}
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.prototype.getValidationParameter = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes validation_parameter = 6;
 * This is a type-conversion wrapper around `getValidationParameter()`
 * @return {string}
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.prototype.getValidationParameter_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValidationParameter()));
};


/**
 * optional bytes validation_parameter = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValidationParameter()`
 * @return {!Uint8Array}
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.prototype.getValidationParameter_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValidationParameter()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.lifecycle.CommitChaincodeDefinitionArgs} returns this
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.prototype.setValidationParameter = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional protos.CollectionConfigPackage collections = 7;
 * @return {?proto.protos.CollectionConfigPackage}
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.prototype.getCollections = function() {
  return /** @type{?proto.protos.CollectionConfigPackage} */ (
    jspb.Message.getWrapperField(this, peer_collection_pb.CollectionConfigPackage, 7));
};


/**
 * @param {?proto.protos.CollectionConfigPackage|undefined} value
 * @return {!proto.lifecycle.CommitChaincodeDefinitionArgs} returns this
*/
proto.lifecycle.CommitChaincodeDefinitionArgs.prototype.setCollections = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lifecycle.CommitChaincodeDefinitionArgs} returns this
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.prototype.clearCollections = function() {
  return this.setCollections(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.prototype.hasCollections = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool init_required = 8;
 * @return {boolean}
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.prototype.getInitRequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.lifecycle.CommitChaincodeDefinitionArgs} returns this
 */
proto.lifecycle.CommitChaincodeDefinitionArgs.prototype.setInitRequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.CommitChaincodeDefinitionResult.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.CommitChaincodeDefinitionResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.CommitChaincodeDefinitionResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.CommitChaincodeDefinitionResult.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.CommitChaincodeDefinitionResult}
 */
proto.lifecycle.CommitChaincodeDefinitionResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.CommitChaincodeDefinitionResult;
  return proto.lifecycle.CommitChaincodeDefinitionResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.CommitChaincodeDefinitionResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.CommitChaincodeDefinitionResult}
 */
proto.lifecycle.CommitChaincodeDefinitionResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.CommitChaincodeDefinitionResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.CommitChaincodeDefinitionResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.CommitChaincodeDefinitionResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.CommitChaincodeDefinitionResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.CheckCommitReadinessArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.CheckCommitReadinessArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.CheckCommitReadinessArgs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.CheckCommitReadinessArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequence: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    version: jspb.Message.getFieldWithDefault(msg, 3, ""),
    endorsementPlugin: jspb.Message.getFieldWithDefault(msg, 4, ""),
    validationPlugin: jspb.Message.getFieldWithDefault(msg, 5, ""),
    validationParameter: msg.getValidationParameter_asB64(),
    collections: (f = msg.getCollections()) && peer_collection_pb.CollectionConfigPackage.toObject(includeInstance, f),
    initRequired: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.CheckCommitReadinessArgs}
 */
proto.lifecycle.CheckCommitReadinessArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.CheckCommitReadinessArgs;
  return proto.lifecycle.CheckCommitReadinessArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.CheckCommitReadinessArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.CheckCommitReadinessArgs}
 */
proto.lifecycle.CheckCommitReadinessArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSequence(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndorsementPlugin(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidationPlugin(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValidationParameter(value);
      break;
    case 7:
      var value = new peer_collection_pb.CollectionConfigPackage;
      reader.readMessage(value,peer_collection_pb.CollectionConfigPackage.deserializeBinaryFromReader);
      msg.setCollections(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInitRequired(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.CheckCommitReadinessArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.CheckCommitReadinessArgs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.CheckCommitReadinessArgs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.CheckCommitReadinessArgs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequence();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEndorsementPlugin();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getValidationPlugin();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getValidationParameter_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getCollections();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      peer_collection_pb.CollectionConfigPackage.serializeBinaryToWriter
    );
  }
  f = message.getInitRequired();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional int64 sequence = 1;
 * @return {number}
 */
proto.lifecycle.CheckCommitReadinessArgs.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.lifecycle.CheckCommitReadinessArgs} returns this
 */
proto.lifecycle.CheckCommitReadinessArgs.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.lifecycle.CheckCommitReadinessArgs.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.CheckCommitReadinessArgs} returns this
 */
proto.lifecycle.CheckCommitReadinessArgs.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string version = 3;
 * @return {string}
 */
proto.lifecycle.CheckCommitReadinessArgs.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.CheckCommitReadinessArgs} returns this
 */
proto.lifecycle.CheckCommitReadinessArgs.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string endorsement_plugin = 4;
 * @return {string}
 */
proto.lifecycle.CheckCommitReadinessArgs.prototype.getEndorsementPlugin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.CheckCommitReadinessArgs} returns this
 */
proto.lifecycle.CheckCommitReadinessArgs.prototype.setEndorsementPlugin = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string validation_plugin = 5;
 * @return {string}
 */
proto.lifecycle.CheckCommitReadinessArgs.prototype.getValidationPlugin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.CheckCommitReadinessArgs} returns this
 */
proto.lifecycle.CheckCommitReadinessArgs.prototype.setValidationPlugin = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bytes validation_parameter = 6;
 * @return {!(string|Uint8Array)}
 */
proto.lifecycle.CheckCommitReadinessArgs.prototype.getValidationParameter = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes validation_parameter = 6;
 * This is a type-conversion wrapper around `getValidationParameter()`
 * @return {string}
 */
proto.lifecycle.CheckCommitReadinessArgs.prototype.getValidationParameter_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValidationParameter()));
};


/**
 * optional bytes validation_parameter = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValidationParameter()`
 * @return {!Uint8Array}
 */
proto.lifecycle.CheckCommitReadinessArgs.prototype.getValidationParameter_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValidationParameter()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.lifecycle.CheckCommitReadinessArgs} returns this
 */
proto.lifecycle.CheckCommitReadinessArgs.prototype.setValidationParameter = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional protos.CollectionConfigPackage collections = 7;
 * @return {?proto.protos.CollectionConfigPackage}
 */
proto.lifecycle.CheckCommitReadinessArgs.prototype.getCollections = function() {
  return /** @type{?proto.protos.CollectionConfigPackage} */ (
    jspb.Message.getWrapperField(this, peer_collection_pb.CollectionConfigPackage, 7));
};


/**
 * @param {?proto.protos.CollectionConfigPackage|undefined} value
 * @return {!proto.lifecycle.CheckCommitReadinessArgs} returns this
*/
proto.lifecycle.CheckCommitReadinessArgs.prototype.setCollections = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lifecycle.CheckCommitReadinessArgs} returns this
 */
proto.lifecycle.CheckCommitReadinessArgs.prototype.clearCollections = function() {
  return this.setCollections(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lifecycle.CheckCommitReadinessArgs.prototype.hasCollections = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool init_required = 8;
 * @return {boolean}
 */
proto.lifecycle.CheckCommitReadinessArgs.prototype.getInitRequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.lifecycle.CheckCommitReadinessArgs} returns this
 */
proto.lifecycle.CheckCommitReadinessArgs.prototype.setInitRequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.CheckCommitReadinessResult.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.CheckCommitReadinessResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.CheckCommitReadinessResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.CheckCommitReadinessResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    approvalsMap: (f = msg.getApprovalsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.CheckCommitReadinessResult}
 */
proto.lifecycle.CheckCommitReadinessResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.CheckCommitReadinessResult;
  return proto.lifecycle.CheckCommitReadinessResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.CheckCommitReadinessResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.CheckCommitReadinessResult}
 */
proto.lifecycle.CheckCommitReadinessResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getApprovalsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBool, null, "", false);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.CheckCommitReadinessResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.CheckCommitReadinessResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.CheckCommitReadinessResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.CheckCommitReadinessResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApprovalsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBool);
  }
};


/**
 * map<string, bool> approvals = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,boolean>}
 */
proto.lifecycle.CheckCommitReadinessResult.prototype.getApprovalsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,boolean>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.lifecycle.CheckCommitReadinessResult} returns this
 */
proto.lifecycle.CheckCommitReadinessResult.prototype.clearApprovalsMap = function() {
  this.getApprovalsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.QueryApprovedChaincodeDefinitionArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.QueryApprovedChaincodeDefinitionArgs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sequence: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.QueryApprovedChaincodeDefinitionArgs}
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.QueryApprovedChaincodeDefinitionArgs;
  return proto.lifecycle.QueryApprovedChaincodeDefinitionArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.QueryApprovedChaincodeDefinitionArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.QueryApprovedChaincodeDefinitionArgs}
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSequence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.QueryApprovedChaincodeDefinitionArgs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.QueryApprovedChaincodeDefinitionArgs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionArgs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionArgs.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.QueryApprovedChaincodeDefinitionArgs} returns this
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionArgs.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 sequence = 2;
 * @return {number}
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionArgs.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.lifecycle.QueryApprovedChaincodeDefinitionArgs} returns this
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionArgs.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.QueryApprovedChaincodeDefinitionResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.QueryApprovedChaincodeDefinitionResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequence: jspb.Message.getFieldWithDefault(msg, 1, 0),
    version: jspb.Message.getFieldWithDefault(msg, 2, ""),
    endorsementPlugin: jspb.Message.getFieldWithDefault(msg, 3, ""),
    validationPlugin: jspb.Message.getFieldWithDefault(msg, 4, ""),
    validationParameter: msg.getValidationParameter_asB64(),
    collections: (f = msg.getCollections()) && peer_collection_pb.CollectionConfigPackage.toObject(includeInstance, f),
    initRequired: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    source: (f = msg.getSource()) && proto.lifecycle.ChaincodeSource.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.QueryApprovedChaincodeDefinitionResult}
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.QueryApprovedChaincodeDefinitionResult;
  return proto.lifecycle.QueryApprovedChaincodeDefinitionResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.QueryApprovedChaincodeDefinitionResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.QueryApprovedChaincodeDefinitionResult}
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSequence(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndorsementPlugin(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidationPlugin(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValidationParameter(value);
      break;
    case 6:
      var value = new peer_collection_pb.CollectionConfigPackage;
      reader.readMessage(value,peer_collection_pb.CollectionConfigPackage.deserializeBinaryFromReader);
      msg.setCollections(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInitRequired(value);
      break;
    case 8:
      var value = new proto.lifecycle.ChaincodeSource;
      reader.readMessage(value,proto.lifecycle.ChaincodeSource.deserializeBinaryFromReader);
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.QueryApprovedChaincodeDefinitionResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.QueryApprovedChaincodeDefinitionResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequence();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEndorsementPlugin();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getValidationPlugin();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getValidationParameter_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getCollections();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      peer_collection_pb.CollectionConfigPackage.serializeBinaryToWriter
    );
  }
  f = message.getInitRequired();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getSource();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.lifecycle.ChaincodeSource.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 sequence = 1;
 * @return {number}
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.lifecycle.QueryApprovedChaincodeDefinitionResult} returns this
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string version = 2;
 * @return {string}
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.QueryApprovedChaincodeDefinitionResult} returns this
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string endorsement_plugin = 3;
 * @return {string}
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.prototype.getEndorsementPlugin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.QueryApprovedChaincodeDefinitionResult} returns this
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.prototype.setEndorsementPlugin = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string validation_plugin = 4;
 * @return {string}
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.prototype.getValidationPlugin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.QueryApprovedChaincodeDefinitionResult} returns this
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.prototype.setValidationPlugin = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bytes validation_parameter = 5;
 * @return {!(string|Uint8Array)}
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.prototype.getValidationParameter = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes validation_parameter = 5;
 * This is a type-conversion wrapper around `getValidationParameter()`
 * @return {string}
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.prototype.getValidationParameter_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValidationParameter()));
};


/**
 * optional bytes validation_parameter = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValidationParameter()`
 * @return {!Uint8Array}
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.prototype.getValidationParameter_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValidationParameter()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.lifecycle.QueryApprovedChaincodeDefinitionResult} returns this
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.prototype.setValidationParameter = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional protos.CollectionConfigPackage collections = 6;
 * @return {?proto.protos.CollectionConfigPackage}
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.prototype.getCollections = function() {
  return /** @type{?proto.protos.CollectionConfigPackage} */ (
    jspb.Message.getWrapperField(this, peer_collection_pb.CollectionConfigPackage, 6));
};


/**
 * @param {?proto.protos.CollectionConfigPackage|undefined} value
 * @return {!proto.lifecycle.QueryApprovedChaincodeDefinitionResult} returns this
*/
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.prototype.setCollections = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lifecycle.QueryApprovedChaincodeDefinitionResult} returns this
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.prototype.clearCollections = function() {
  return this.setCollections(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.prototype.hasCollections = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool init_required = 7;
 * @return {boolean}
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.prototype.getInitRequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.lifecycle.QueryApprovedChaincodeDefinitionResult} returns this
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.prototype.setInitRequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional ChaincodeSource source = 8;
 * @return {?proto.lifecycle.ChaincodeSource}
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.prototype.getSource = function() {
  return /** @type{?proto.lifecycle.ChaincodeSource} */ (
    jspb.Message.getWrapperField(this, proto.lifecycle.ChaincodeSource, 8));
};


/**
 * @param {?proto.lifecycle.ChaincodeSource|undefined} value
 * @return {!proto.lifecycle.QueryApprovedChaincodeDefinitionResult} returns this
*/
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.prototype.setSource = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lifecycle.QueryApprovedChaincodeDefinitionResult} returns this
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.prototype.clearSource = function() {
  return this.setSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lifecycle.QueryApprovedChaincodeDefinitionResult.prototype.hasSource = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.QueryChaincodeDefinitionArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.QueryChaincodeDefinitionArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.QueryChaincodeDefinitionArgs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryChaincodeDefinitionArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.QueryChaincodeDefinitionArgs}
 */
proto.lifecycle.QueryChaincodeDefinitionArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.QueryChaincodeDefinitionArgs;
  return proto.lifecycle.QueryChaincodeDefinitionArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.QueryChaincodeDefinitionArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.QueryChaincodeDefinitionArgs}
 */
proto.lifecycle.QueryChaincodeDefinitionArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.QueryChaincodeDefinitionArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.QueryChaincodeDefinitionArgs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.QueryChaincodeDefinitionArgs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryChaincodeDefinitionArgs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.lifecycle.QueryChaincodeDefinitionArgs.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.QueryChaincodeDefinitionArgs} returns this
 */
proto.lifecycle.QueryChaincodeDefinitionArgs.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.QueryChaincodeDefinitionResult.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.QueryChaincodeDefinitionResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.QueryChaincodeDefinitionResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryChaincodeDefinitionResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequence: jspb.Message.getFieldWithDefault(msg, 1, 0),
    version: jspb.Message.getFieldWithDefault(msg, 2, ""),
    endorsementPlugin: jspb.Message.getFieldWithDefault(msg, 3, ""),
    validationPlugin: jspb.Message.getFieldWithDefault(msg, 4, ""),
    validationParameter: msg.getValidationParameter_asB64(),
    collections: (f = msg.getCollections()) && peer_collection_pb.CollectionConfigPackage.toObject(includeInstance, f),
    initRequired: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    approvalsMap: (f = msg.getApprovalsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.QueryChaincodeDefinitionResult}
 */
proto.lifecycle.QueryChaincodeDefinitionResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.QueryChaincodeDefinitionResult;
  return proto.lifecycle.QueryChaincodeDefinitionResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.QueryChaincodeDefinitionResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.QueryChaincodeDefinitionResult}
 */
proto.lifecycle.QueryChaincodeDefinitionResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSequence(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndorsementPlugin(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidationPlugin(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValidationParameter(value);
      break;
    case 6:
      var value = new peer_collection_pb.CollectionConfigPackage;
      reader.readMessage(value,peer_collection_pb.CollectionConfigPackage.deserializeBinaryFromReader);
      msg.setCollections(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInitRequired(value);
      break;
    case 8:
      var value = msg.getApprovalsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBool, null, "", false);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.QueryChaincodeDefinitionResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.QueryChaincodeDefinitionResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.QueryChaincodeDefinitionResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryChaincodeDefinitionResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequence();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEndorsementPlugin();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getValidationPlugin();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getValidationParameter_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getCollections();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      peer_collection_pb.CollectionConfigPackage.serializeBinaryToWriter
    );
  }
  f = message.getInitRequired();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getApprovalsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBool);
  }
};


/**
 * optional int64 sequence = 1;
 * @return {number}
 */
proto.lifecycle.QueryChaincodeDefinitionResult.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.lifecycle.QueryChaincodeDefinitionResult} returns this
 */
proto.lifecycle.QueryChaincodeDefinitionResult.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string version = 2;
 * @return {string}
 */
proto.lifecycle.QueryChaincodeDefinitionResult.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.QueryChaincodeDefinitionResult} returns this
 */
proto.lifecycle.QueryChaincodeDefinitionResult.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string endorsement_plugin = 3;
 * @return {string}
 */
proto.lifecycle.QueryChaincodeDefinitionResult.prototype.getEndorsementPlugin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.QueryChaincodeDefinitionResult} returns this
 */
proto.lifecycle.QueryChaincodeDefinitionResult.prototype.setEndorsementPlugin = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string validation_plugin = 4;
 * @return {string}
 */
proto.lifecycle.QueryChaincodeDefinitionResult.prototype.getValidationPlugin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.QueryChaincodeDefinitionResult} returns this
 */
proto.lifecycle.QueryChaincodeDefinitionResult.prototype.setValidationPlugin = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bytes validation_parameter = 5;
 * @return {!(string|Uint8Array)}
 */
proto.lifecycle.QueryChaincodeDefinitionResult.prototype.getValidationParameter = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes validation_parameter = 5;
 * This is a type-conversion wrapper around `getValidationParameter()`
 * @return {string}
 */
proto.lifecycle.QueryChaincodeDefinitionResult.prototype.getValidationParameter_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValidationParameter()));
};


/**
 * optional bytes validation_parameter = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValidationParameter()`
 * @return {!Uint8Array}
 */
proto.lifecycle.QueryChaincodeDefinitionResult.prototype.getValidationParameter_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValidationParameter()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.lifecycle.QueryChaincodeDefinitionResult} returns this
 */
proto.lifecycle.QueryChaincodeDefinitionResult.prototype.setValidationParameter = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional protos.CollectionConfigPackage collections = 6;
 * @return {?proto.protos.CollectionConfigPackage}
 */
proto.lifecycle.QueryChaincodeDefinitionResult.prototype.getCollections = function() {
  return /** @type{?proto.protos.CollectionConfigPackage} */ (
    jspb.Message.getWrapperField(this, peer_collection_pb.CollectionConfigPackage, 6));
};


/**
 * @param {?proto.protos.CollectionConfigPackage|undefined} value
 * @return {!proto.lifecycle.QueryChaincodeDefinitionResult} returns this
*/
proto.lifecycle.QueryChaincodeDefinitionResult.prototype.setCollections = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lifecycle.QueryChaincodeDefinitionResult} returns this
 */
proto.lifecycle.QueryChaincodeDefinitionResult.prototype.clearCollections = function() {
  return this.setCollections(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lifecycle.QueryChaincodeDefinitionResult.prototype.hasCollections = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool init_required = 7;
 * @return {boolean}
 */
proto.lifecycle.QueryChaincodeDefinitionResult.prototype.getInitRequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.lifecycle.QueryChaincodeDefinitionResult} returns this
 */
proto.lifecycle.QueryChaincodeDefinitionResult.prototype.setInitRequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * map<string, bool> approvals = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,boolean>}
 */
proto.lifecycle.QueryChaincodeDefinitionResult.prototype.getApprovalsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,boolean>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.lifecycle.QueryChaincodeDefinitionResult} returns this
 */
proto.lifecycle.QueryChaincodeDefinitionResult.prototype.clearApprovalsMap = function() {
  this.getApprovalsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.QueryChaincodeDefinitionsArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.QueryChaincodeDefinitionsArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.QueryChaincodeDefinitionsArgs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryChaincodeDefinitionsArgs.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.QueryChaincodeDefinitionsArgs}
 */
proto.lifecycle.QueryChaincodeDefinitionsArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.QueryChaincodeDefinitionsArgs;
  return proto.lifecycle.QueryChaincodeDefinitionsArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.QueryChaincodeDefinitionsArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.QueryChaincodeDefinitionsArgs}
 */
proto.lifecycle.QueryChaincodeDefinitionsArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.QueryChaincodeDefinitionsArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.QueryChaincodeDefinitionsArgs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.QueryChaincodeDefinitionsArgs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryChaincodeDefinitionsArgs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.QueryChaincodeDefinitionsResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.QueryChaincodeDefinitionsResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    chaincodeDefinitionsList: jspb.Message.toObjectList(msg.getChaincodeDefinitionsList(),
    proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.QueryChaincodeDefinitionsResult}
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.QueryChaincodeDefinitionsResult;
  return proto.lifecycle.QueryChaincodeDefinitionsResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.QueryChaincodeDefinitionsResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.QueryChaincodeDefinitionsResult}
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition;
      reader.readMessage(value,proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.deserializeBinaryFromReader);
      msg.addChaincodeDefinitions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.QueryChaincodeDefinitionsResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.QueryChaincodeDefinitionsResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChaincodeDefinitionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.prototype.toObject = function(opt_includeInstance) {
  return proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sequence: jspb.Message.getFieldWithDefault(msg, 2, 0),
    version: jspb.Message.getFieldWithDefault(msg, 3, ""),
    endorsementPlugin: jspb.Message.getFieldWithDefault(msg, 4, ""),
    validationPlugin: jspb.Message.getFieldWithDefault(msg, 5, ""),
    validationParameter: msg.getValidationParameter_asB64(),
    collections: (f = msg.getCollections()) && peer_collection_pb.CollectionConfigPackage.toObject(includeInstance, f),
    initRequired: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition}
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition;
  return proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition}
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSequence(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndorsementPlugin(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidationPlugin(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValidationParameter(value);
      break;
    case 7:
      var value = new peer_collection_pb.CollectionConfigPackage;
      reader.readMessage(value,peer_collection_pb.CollectionConfigPackage.deserializeBinaryFromReader);
      msg.setCollections(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInitRequired(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEndorsementPlugin();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getValidationPlugin();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getValidationParameter_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getCollections();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      peer_collection_pb.CollectionConfigPackage.serializeBinaryToWriter
    );
  }
  f = message.getInitRequired();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition} returns this
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 sequence = 2;
 * @return {number}
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition} returns this
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string version = 3;
 * @return {string}
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition} returns this
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string endorsement_plugin = 4;
 * @return {string}
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.prototype.getEndorsementPlugin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition} returns this
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.prototype.setEndorsementPlugin = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string validation_plugin = 5;
 * @return {string}
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.prototype.getValidationPlugin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition} returns this
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.prototype.setValidationPlugin = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bytes validation_parameter = 6;
 * @return {!(string|Uint8Array)}
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.prototype.getValidationParameter = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes validation_parameter = 6;
 * This is a type-conversion wrapper around `getValidationParameter()`
 * @return {string}
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.prototype.getValidationParameter_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValidationParameter()));
};


/**
 * optional bytes validation_parameter = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValidationParameter()`
 * @return {!Uint8Array}
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.prototype.getValidationParameter_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValidationParameter()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition} returns this
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.prototype.setValidationParameter = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional protos.CollectionConfigPackage collections = 7;
 * @return {?proto.protos.CollectionConfigPackage}
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.prototype.getCollections = function() {
  return /** @type{?proto.protos.CollectionConfigPackage} */ (
    jspb.Message.getWrapperField(this, peer_collection_pb.CollectionConfigPackage, 7));
};


/**
 * @param {?proto.protos.CollectionConfigPackage|undefined} value
 * @return {!proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition} returns this
*/
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.prototype.setCollections = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition} returns this
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.prototype.clearCollections = function() {
  return this.setCollections(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.prototype.hasCollections = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool init_required = 8;
 * @return {boolean}
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.prototype.getInitRequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition} returns this
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.prototype.setInitRequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * repeated ChaincodeDefinition chaincode_definitions = 1;
 * @return {!Array<!proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition>}
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.prototype.getChaincodeDefinitionsList = function() {
  return /** @type{!Array<!proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition, 1));
};


/**
 * @param {!Array<!proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition>} value
 * @return {!proto.lifecycle.QueryChaincodeDefinitionsResult} returns this
*/
proto.lifecycle.QueryChaincodeDefinitionsResult.prototype.setChaincodeDefinitionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition}
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.prototype.addChaincodeDefinitions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.lifecycle.QueryChaincodeDefinitionsResult} returns this
 */
proto.lifecycle.QueryChaincodeDefinitionsResult.prototype.clearChaincodeDefinitionsList = function() {
  return this.setChaincodeDefinitionsList([]);
};


goog.object.extend(exports, proto.lifecycle);
