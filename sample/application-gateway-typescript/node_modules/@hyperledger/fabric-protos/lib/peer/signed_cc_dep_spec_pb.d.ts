// package: protos
// file: peer/signed_cc_dep_spec.proto

import * as jspb from "google-protobuf";
import * as peer_proposal_response_pb from "../peer/proposal_response_pb";

export class SignedChaincodeDeploymentSpec extends jspb.Message {
  getChaincodeDeploymentSpec(): Uint8Array | string;
  getChaincodeDeploymentSpec_asU8(): Uint8Array;
  getChaincodeDeploymentSpec_asB64(): string;
  setChaincodeDeploymentSpec(value: Uint8Array | string): void;

  getInstantiationPolicy(): Uint8Array | string;
  getInstantiationPolicy_asU8(): Uint8Array;
  getInstantiationPolicy_asB64(): string;
  setInstantiationPolicy(value: Uint8Array | string): void;

  clearOwnerEndorsementsList(): void;
  getOwnerEndorsementsList(): Array<peer_proposal_response_pb.Endorsement>;
  setOwnerEndorsementsList(value: Array<peer_proposal_response_pb.Endorsement>): void;
  addOwnerEndorsements(value?: peer_proposal_response_pb.Endorsement, index?: number): peer_proposal_response_pb.Endorsement;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): SignedChaincodeDeploymentSpec.AsObject;
  static toObject(includeInstance: boolean, msg: SignedChaincodeDeploymentSpec): SignedChaincodeDeploymentSpec.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: SignedChaincodeDeploymentSpec, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): SignedChaincodeDeploymentSpec;
  static deserializeBinaryFromReader(message: SignedChaincodeDeploymentSpec, reader: jspb.BinaryReader): SignedChaincodeDeploymentSpec;
}

export namespace SignedChaincodeDeploymentSpec {
  export type AsObject = {
    chaincodeDeploymentSpec: Uint8Array | string,
    instantiationPolicy: Uint8Array | string,
    ownerEndorsementsList: Array<peer_proposal_response_pb.Endorsement.AsObject>,
  }
}

