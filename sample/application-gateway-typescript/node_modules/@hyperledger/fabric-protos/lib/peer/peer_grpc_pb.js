// GENERATED CODE -- DO NOT EDIT!

// Original file comments:
// Copyright the Hyperledger Fabric contributors. All rights reserved.
//
// SPDX-License-Identifier: Apache-2.0
//
'use strict';
var grpc = require('@grpc/grpc-js');
var peer_proposal_pb = require('../peer/proposal_pb.js');
var peer_proposal_response_pb = require('../peer/proposal_response_pb.js');

function serialize_protos_ProposalResponse(arg) {
  if (!(arg instanceof peer_proposal_response_pb.ProposalResponse)) {
    throw new Error('Expected argument of type protos.ProposalResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_protos_ProposalResponse(buffer_arg) {
  return peer_proposal_response_pb.ProposalResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_protos_SignedProposal(arg) {
  if (!(arg instanceof peer_proposal_pb.SignedProposal)) {
    throw new Error('Expected argument of type protos.SignedProposal');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_protos_SignedProposal(buffer_arg) {
  return peer_proposal_pb.SignedProposal.deserializeBinary(new Uint8Array(buffer_arg));
}


var EndorserService = exports.EndorserService = {
  processProposal: {
    path: '/protos.Endorser/ProcessProposal',
    requestStream: false,
    responseStream: false,
    requestType: peer_proposal_pb.SignedProposal,
    responseType: peer_proposal_response_pb.ProposalResponse,
    requestSerialize: serialize_protos_SignedProposal,
    requestDeserialize: deserialize_protos_SignedProposal,
    responseSerialize: serialize_protos_ProposalResponse,
    responseDeserialize: deserialize_protos_ProposalResponse,
  },
};

exports.EndorserClient = grpc.makeGenericClientConstructor(EndorserService);
