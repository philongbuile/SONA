// GENERATED CODE -- DO NOT EDIT!

// Original file comments:
// Copyright the Hyperledger Fabric contributors. All rights reserved.
//
// SPDX-License-Identifier: Apache-2.0
//
'use strict';
var grpc = require('@grpc/grpc-js');
var peer_snapshot_pb = require('../peer/snapshot_pb.js');
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
var common_common_pb = require('../common/common_pb.js');

function serialize_google_protobuf_Empty(arg) {
  if (!(arg instanceof google_protobuf_empty_pb.Empty)) {
    throw new Error('Expected argument of type google.protobuf.Empty');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_google_protobuf_Empty(buffer_arg) {
  return google_protobuf_empty_pb.Empty.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_protos_QueryPendingSnapshotsResponse(arg) {
  if (!(arg instanceof peer_snapshot_pb.QueryPendingSnapshotsResponse)) {
    throw new Error('Expected argument of type protos.QueryPendingSnapshotsResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_protos_QueryPendingSnapshotsResponse(buffer_arg) {
  return peer_snapshot_pb.QueryPendingSnapshotsResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_protos_SignedSnapshotRequest(arg) {
  if (!(arg instanceof peer_snapshot_pb.SignedSnapshotRequest)) {
    throw new Error('Expected argument of type protos.SignedSnapshotRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_protos_SignedSnapshotRequest(buffer_arg) {
  return peer_snapshot_pb.SignedSnapshotRequest.deserializeBinary(new Uint8Array(buffer_arg));
}


var SnapshotService = exports.SnapshotService = {
  // Generate a snapshot reqeust. SignedSnapshotRequest contains marshalled bytes for SnaphostRequest
generate: {
    path: '/protos.Snapshot/Generate',
    requestStream: false,
    responseStream: false,
    requestType: peer_snapshot_pb.SignedSnapshotRequest,
    responseType: google_protobuf_empty_pb.Empty,
    requestSerialize: serialize_protos_SignedSnapshotRequest,
    requestDeserialize: deserialize_protos_SignedSnapshotRequest,
    responseSerialize: serialize_google_protobuf_Empty,
    responseDeserialize: deserialize_google_protobuf_Empty,
  },
  // Cancel a snapshot reqeust. SignedSnapshotRequest contains marshalled bytes for SnaphostRequest
cancel: {
    path: '/protos.Snapshot/Cancel',
    requestStream: false,
    responseStream: false,
    requestType: peer_snapshot_pb.SignedSnapshotRequest,
    responseType: google_protobuf_empty_pb.Empty,
    requestSerialize: serialize_protos_SignedSnapshotRequest,
    requestDeserialize: deserialize_protos_SignedSnapshotRequest,
    responseSerialize: serialize_google_protobuf_Empty,
    responseDeserialize: deserialize_google_protobuf_Empty,
  },
  // Query pending snapshots query. SignedSnapshotRequest contains marshalled bytes for SnaphostQuery
queryPendings: {
    path: '/protos.Snapshot/QueryPendings',
    requestStream: false,
    responseStream: false,
    requestType: peer_snapshot_pb.SignedSnapshotRequest,
    responseType: peer_snapshot_pb.QueryPendingSnapshotsResponse,
    requestSerialize: serialize_protos_SignedSnapshotRequest,
    requestDeserialize: deserialize_protos_SignedSnapshotRequest,
    responseSerialize: serialize_protos_QueryPendingSnapshotsResponse,
    responseDeserialize: deserialize_protos_QueryPendingSnapshotsResponse,
  },
};

exports.SnapshotClient = grpc.makeGenericClientConstructor(SnapshotService);
