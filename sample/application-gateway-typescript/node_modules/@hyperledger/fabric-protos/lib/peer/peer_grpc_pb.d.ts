// GENERATED CODE -- DO NOT EDIT!

// package: protos
// file: peer/peer.proto

import * as peer_peer_pb from "../peer/peer_pb";
import * as peer_proposal_pb from "../peer/proposal_pb";
import * as peer_proposal_response_pb from "../peer/proposal_response_pb";
import * as grpc from "@grpc/grpc-js";

interface IEndorserService extends grpc.ServiceDefinition<grpc.UntypedServiceImplementation> {
  processProposal: grpc.MethodDefinition<peer_proposal_pb.SignedProposal, peer_proposal_response_pb.ProposalResponse>;
}

export const EndorserService: IEndorserService;

export interface IEndorserServer extends grpc.UntypedServiceImplementation {
  processProposal: grpc.handleUnaryCall<peer_proposal_pb.SignedProposal, peer_proposal_response_pb.ProposalResponse>;
}

export class EndorserClient extends grpc.Client {
  constructor(address: string, credentials: grpc.ChannelCredentials, options?: object);
  processProposal(argument: peer_proposal_pb.SignedProposal, callback: grpc.requestCallback<peer_proposal_response_pb.ProposalResponse>): grpc.ClientUnaryCall;
  processProposal(argument: peer_proposal_pb.SignedProposal, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<peer_proposal_response_pb.ProposalResponse>): grpc.ClientUnaryCall;
  processProposal(argument: peer_proposal_pb.SignedProposal, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<peer_proposal_response_pb.ProposalResponse>): grpc.ClientUnaryCall;
}
