// source: ledger/rwset/kvrwset/kv_rwset.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.kvrwset.HashedRWSet', null, global);
goog.exportSymbol('proto.kvrwset.KVMetadataEntry', null, global);
goog.exportSymbol('proto.kvrwset.KVMetadataWrite', null, global);
goog.exportSymbol('proto.kvrwset.KVMetadataWriteHash', null, global);
goog.exportSymbol('proto.kvrwset.KVRWSet', null, global);
goog.exportSymbol('proto.kvrwset.KVRead', null, global);
goog.exportSymbol('proto.kvrwset.KVReadHash', null, global);
goog.exportSymbol('proto.kvrwset.KVWrite', null, global);
goog.exportSymbol('proto.kvrwset.KVWriteHash', null, global);
goog.exportSymbol('proto.kvrwset.QueryReads', null, global);
goog.exportSymbol('proto.kvrwset.QueryReadsMerkleSummary', null, global);
goog.exportSymbol('proto.kvrwset.RangeQueryInfo', null, global);
goog.exportSymbol('proto.kvrwset.RangeQueryInfo.ReadsInfoCase', null, global);
goog.exportSymbol('proto.kvrwset.Version', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kvrwset.KVRWSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kvrwset.KVRWSet.repeatedFields_, null);
};
goog.inherits(proto.kvrwset.KVRWSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kvrwset.KVRWSet.displayName = 'proto.kvrwset.KVRWSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kvrwset.HashedRWSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kvrwset.HashedRWSet.repeatedFields_, null);
};
goog.inherits(proto.kvrwset.HashedRWSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kvrwset.HashedRWSet.displayName = 'proto.kvrwset.HashedRWSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kvrwset.KVRead = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kvrwset.KVRead, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kvrwset.KVRead.displayName = 'proto.kvrwset.KVRead';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kvrwset.KVWrite = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kvrwset.KVWrite, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kvrwset.KVWrite.displayName = 'proto.kvrwset.KVWrite';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kvrwset.KVMetadataWrite = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kvrwset.KVMetadataWrite.repeatedFields_, null);
};
goog.inherits(proto.kvrwset.KVMetadataWrite, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kvrwset.KVMetadataWrite.displayName = 'proto.kvrwset.KVMetadataWrite';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kvrwset.KVReadHash = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kvrwset.KVReadHash, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kvrwset.KVReadHash.displayName = 'proto.kvrwset.KVReadHash';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kvrwset.KVWriteHash = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kvrwset.KVWriteHash, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kvrwset.KVWriteHash.displayName = 'proto.kvrwset.KVWriteHash';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kvrwset.KVMetadataWriteHash = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kvrwset.KVMetadataWriteHash.repeatedFields_, null);
};
goog.inherits(proto.kvrwset.KVMetadataWriteHash, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kvrwset.KVMetadataWriteHash.displayName = 'proto.kvrwset.KVMetadataWriteHash';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kvrwset.KVMetadataEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kvrwset.KVMetadataEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kvrwset.KVMetadataEntry.displayName = 'proto.kvrwset.KVMetadataEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kvrwset.Version = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kvrwset.Version, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kvrwset.Version.displayName = 'proto.kvrwset.Version';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kvrwset.RangeQueryInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.kvrwset.RangeQueryInfo.oneofGroups_);
};
goog.inherits(proto.kvrwset.RangeQueryInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kvrwset.RangeQueryInfo.displayName = 'proto.kvrwset.RangeQueryInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kvrwset.QueryReads = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kvrwset.QueryReads.repeatedFields_, null);
};
goog.inherits(proto.kvrwset.QueryReads, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kvrwset.QueryReads.displayName = 'proto.kvrwset.QueryReads';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kvrwset.QueryReadsMerkleSummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kvrwset.QueryReadsMerkleSummary.repeatedFields_, null);
};
goog.inherits(proto.kvrwset.QueryReadsMerkleSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kvrwset.QueryReadsMerkleSummary.displayName = 'proto.kvrwset.QueryReadsMerkleSummary';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kvrwset.KVRWSet.repeatedFields_ = [1,2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kvrwset.KVRWSet.prototype.toObject = function(opt_includeInstance) {
  return proto.kvrwset.KVRWSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kvrwset.KVRWSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.KVRWSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    readsList: jspb.Message.toObjectList(msg.getReadsList(),
    proto.kvrwset.KVRead.toObject, includeInstance),
    rangeQueriesInfoList: jspb.Message.toObjectList(msg.getRangeQueriesInfoList(),
    proto.kvrwset.RangeQueryInfo.toObject, includeInstance),
    writesList: jspb.Message.toObjectList(msg.getWritesList(),
    proto.kvrwset.KVWrite.toObject, includeInstance),
    metadataWritesList: jspb.Message.toObjectList(msg.getMetadataWritesList(),
    proto.kvrwset.KVMetadataWrite.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kvrwset.KVRWSet}
 */
proto.kvrwset.KVRWSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kvrwset.KVRWSet;
  return proto.kvrwset.KVRWSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kvrwset.KVRWSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kvrwset.KVRWSet}
 */
proto.kvrwset.KVRWSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.kvrwset.KVRead;
      reader.readMessage(value,proto.kvrwset.KVRead.deserializeBinaryFromReader);
      msg.addReads(value);
      break;
    case 2:
      var value = new proto.kvrwset.RangeQueryInfo;
      reader.readMessage(value,proto.kvrwset.RangeQueryInfo.deserializeBinaryFromReader);
      msg.addRangeQueriesInfo(value);
      break;
    case 3:
      var value = new proto.kvrwset.KVWrite;
      reader.readMessage(value,proto.kvrwset.KVWrite.deserializeBinaryFromReader);
      msg.addWrites(value);
      break;
    case 4:
      var value = new proto.kvrwset.KVMetadataWrite;
      reader.readMessage(value,proto.kvrwset.KVMetadataWrite.deserializeBinaryFromReader);
      msg.addMetadataWrites(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kvrwset.KVRWSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kvrwset.KVRWSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kvrwset.KVRWSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.KVRWSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReadsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.kvrwset.KVRead.serializeBinaryToWriter
    );
  }
  f = message.getRangeQueriesInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.kvrwset.RangeQueryInfo.serializeBinaryToWriter
    );
  }
  f = message.getWritesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.kvrwset.KVWrite.serializeBinaryToWriter
    );
  }
  f = message.getMetadataWritesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.kvrwset.KVMetadataWrite.serializeBinaryToWriter
    );
  }
};


/**
 * repeated KVRead reads = 1;
 * @return {!Array<!proto.kvrwset.KVRead>}
 */
proto.kvrwset.KVRWSet.prototype.getReadsList = function() {
  return /** @type{!Array<!proto.kvrwset.KVRead>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kvrwset.KVRead, 1));
};


/**
 * @param {!Array<!proto.kvrwset.KVRead>} value
 * @return {!proto.kvrwset.KVRWSet} returns this
*/
proto.kvrwset.KVRWSet.prototype.setReadsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.kvrwset.KVRead=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kvrwset.KVRead}
 */
proto.kvrwset.KVRWSet.prototype.addReads = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.kvrwset.KVRead, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kvrwset.KVRWSet} returns this
 */
proto.kvrwset.KVRWSet.prototype.clearReadsList = function() {
  return this.setReadsList([]);
};


/**
 * repeated RangeQueryInfo range_queries_info = 2;
 * @return {!Array<!proto.kvrwset.RangeQueryInfo>}
 */
proto.kvrwset.KVRWSet.prototype.getRangeQueriesInfoList = function() {
  return /** @type{!Array<!proto.kvrwset.RangeQueryInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kvrwset.RangeQueryInfo, 2));
};


/**
 * @param {!Array<!proto.kvrwset.RangeQueryInfo>} value
 * @return {!proto.kvrwset.KVRWSet} returns this
*/
proto.kvrwset.KVRWSet.prototype.setRangeQueriesInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.kvrwset.RangeQueryInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kvrwset.RangeQueryInfo}
 */
proto.kvrwset.KVRWSet.prototype.addRangeQueriesInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.kvrwset.RangeQueryInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kvrwset.KVRWSet} returns this
 */
proto.kvrwset.KVRWSet.prototype.clearRangeQueriesInfoList = function() {
  return this.setRangeQueriesInfoList([]);
};


/**
 * repeated KVWrite writes = 3;
 * @return {!Array<!proto.kvrwset.KVWrite>}
 */
proto.kvrwset.KVRWSet.prototype.getWritesList = function() {
  return /** @type{!Array<!proto.kvrwset.KVWrite>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kvrwset.KVWrite, 3));
};


/**
 * @param {!Array<!proto.kvrwset.KVWrite>} value
 * @return {!proto.kvrwset.KVRWSet} returns this
*/
proto.kvrwset.KVRWSet.prototype.setWritesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.kvrwset.KVWrite=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kvrwset.KVWrite}
 */
proto.kvrwset.KVRWSet.prototype.addWrites = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.kvrwset.KVWrite, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kvrwset.KVRWSet} returns this
 */
proto.kvrwset.KVRWSet.prototype.clearWritesList = function() {
  return this.setWritesList([]);
};


/**
 * repeated KVMetadataWrite metadata_writes = 4;
 * @return {!Array<!proto.kvrwset.KVMetadataWrite>}
 */
proto.kvrwset.KVRWSet.prototype.getMetadataWritesList = function() {
  return /** @type{!Array<!proto.kvrwset.KVMetadataWrite>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kvrwset.KVMetadataWrite, 4));
};


/**
 * @param {!Array<!proto.kvrwset.KVMetadataWrite>} value
 * @return {!proto.kvrwset.KVRWSet} returns this
*/
proto.kvrwset.KVRWSet.prototype.setMetadataWritesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.kvrwset.KVMetadataWrite=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kvrwset.KVMetadataWrite}
 */
proto.kvrwset.KVRWSet.prototype.addMetadataWrites = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.kvrwset.KVMetadataWrite, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kvrwset.KVRWSet} returns this
 */
proto.kvrwset.KVRWSet.prototype.clearMetadataWritesList = function() {
  return this.setMetadataWritesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kvrwset.HashedRWSet.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kvrwset.HashedRWSet.prototype.toObject = function(opt_includeInstance) {
  return proto.kvrwset.HashedRWSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kvrwset.HashedRWSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.HashedRWSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    hashedReadsList: jspb.Message.toObjectList(msg.getHashedReadsList(),
    proto.kvrwset.KVReadHash.toObject, includeInstance),
    hashedWritesList: jspb.Message.toObjectList(msg.getHashedWritesList(),
    proto.kvrwset.KVWriteHash.toObject, includeInstance),
    metadataWritesList: jspb.Message.toObjectList(msg.getMetadataWritesList(),
    proto.kvrwset.KVMetadataWriteHash.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kvrwset.HashedRWSet}
 */
proto.kvrwset.HashedRWSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kvrwset.HashedRWSet;
  return proto.kvrwset.HashedRWSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kvrwset.HashedRWSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kvrwset.HashedRWSet}
 */
proto.kvrwset.HashedRWSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.kvrwset.KVReadHash;
      reader.readMessage(value,proto.kvrwset.KVReadHash.deserializeBinaryFromReader);
      msg.addHashedReads(value);
      break;
    case 2:
      var value = new proto.kvrwset.KVWriteHash;
      reader.readMessage(value,proto.kvrwset.KVWriteHash.deserializeBinaryFromReader);
      msg.addHashedWrites(value);
      break;
    case 3:
      var value = new proto.kvrwset.KVMetadataWriteHash;
      reader.readMessage(value,proto.kvrwset.KVMetadataWriteHash.deserializeBinaryFromReader);
      msg.addMetadataWrites(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kvrwset.HashedRWSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kvrwset.HashedRWSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kvrwset.HashedRWSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.HashedRWSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHashedReadsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.kvrwset.KVReadHash.serializeBinaryToWriter
    );
  }
  f = message.getHashedWritesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.kvrwset.KVWriteHash.serializeBinaryToWriter
    );
  }
  f = message.getMetadataWritesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.kvrwset.KVMetadataWriteHash.serializeBinaryToWriter
    );
  }
};


/**
 * repeated KVReadHash hashed_reads = 1;
 * @return {!Array<!proto.kvrwset.KVReadHash>}
 */
proto.kvrwset.HashedRWSet.prototype.getHashedReadsList = function() {
  return /** @type{!Array<!proto.kvrwset.KVReadHash>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kvrwset.KVReadHash, 1));
};


/**
 * @param {!Array<!proto.kvrwset.KVReadHash>} value
 * @return {!proto.kvrwset.HashedRWSet} returns this
*/
proto.kvrwset.HashedRWSet.prototype.setHashedReadsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.kvrwset.KVReadHash=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kvrwset.KVReadHash}
 */
proto.kvrwset.HashedRWSet.prototype.addHashedReads = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.kvrwset.KVReadHash, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kvrwset.HashedRWSet} returns this
 */
proto.kvrwset.HashedRWSet.prototype.clearHashedReadsList = function() {
  return this.setHashedReadsList([]);
};


/**
 * repeated KVWriteHash hashed_writes = 2;
 * @return {!Array<!proto.kvrwset.KVWriteHash>}
 */
proto.kvrwset.HashedRWSet.prototype.getHashedWritesList = function() {
  return /** @type{!Array<!proto.kvrwset.KVWriteHash>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kvrwset.KVWriteHash, 2));
};


/**
 * @param {!Array<!proto.kvrwset.KVWriteHash>} value
 * @return {!proto.kvrwset.HashedRWSet} returns this
*/
proto.kvrwset.HashedRWSet.prototype.setHashedWritesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.kvrwset.KVWriteHash=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kvrwset.KVWriteHash}
 */
proto.kvrwset.HashedRWSet.prototype.addHashedWrites = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.kvrwset.KVWriteHash, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kvrwset.HashedRWSet} returns this
 */
proto.kvrwset.HashedRWSet.prototype.clearHashedWritesList = function() {
  return this.setHashedWritesList([]);
};


/**
 * repeated KVMetadataWriteHash metadata_writes = 3;
 * @return {!Array<!proto.kvrwset.KVMetadataWriteHash>}
 */
proto.kvrwset.HashedRWSet.prototype.getMetadataWritesList = function() {
  return /** @type{!Array<!proto.kvrwset.KVMetadataWriteHash>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kvrwset.KVMetadataWriteHash, 3));
};


/**
 * @param {!Array<!proto.kvrwset.KVMetadataWriteHash>} value
 * @return {!proto.kvrwset.HashedRWSet} returns this
*/
proto.kvrwset.HashedRWSet.prototype.setMetadataWritesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.kvrwset.KVMetadataWriteHash=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kvrwset.KVMetadataWriteHash}
 */
proto.kvrwset.HashedRWSet.prototype.addMetadataWrites = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.kvrwset.KVMetadataWriteHash, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kvrwset.HashedRWSet} returns this
 */
proto.kvrwset.HashedRWSet.prototype.clearMetadataWritesList = function() {
  return this.setMetadataWritesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kvrwset.KVRead.prototype.toObject = function(opt_includeInstance) {
  return proto.kvrwset.KVRead.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kvrwset.KVRead} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.KVRead.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    version: (f = msg.getVersion()) && proto.kvrwset.Version.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kvrwset.KVRead}
 */
proto.kvrwset.KVRead.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kvrwset.KVRead;
  return proto.kvrwset.KVRead.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kvrwset.KVRead} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kvrwset.KVRead}
 */
proto.kvrwset.KVRead.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = new proto.kvrwset.Version;
      reader.readMessage(value,proto.kvrwset.Version.deserializeBinaryFromReader);
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kvrwset.KVRead.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kvrwset.KVRead.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kvrwset.KVRead} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.KVRead.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.kvrwset.Version.serializeBinaryToWriter
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.kvrwset.KVRead.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kvrwset.KVRead} returns this
 */
proto.kvrwset.KVRead.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Version version = 2;
 * @return {?proto.kvrwset.Version}
 */
proto.kvrwset.KVRead.prototype.getVersion = function() {
  return /** @type{?proto.kvrwset.Version} */ (
    jspb.Message.getWrapperField(this, proto.kvrwset.Version, 2));
};


/**
 * @param {?proto.kvrwset.Version|undefined} value
 * @return {!proto.kvrwset.KVRead} returns this
*/
proto.kvrwset.KVRead.prototype.setVersion = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kvrwset.KVRead} returns this
 */
proto.kvrwset.KVRead.prototype.clearVersion = function() {
  return this.setVersion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kvrwset.KVRead.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kvrwset.KVWrite.prototype.toObject = function(opt_includeInstance) {
  return proto.kvrwset.KVWrite.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kvrwset.KVWrite} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.KVWrite.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isDelete: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    value: msg.getValue_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kvrwset.KVWrite}
 */
proto.kvrwset.KVWrite.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kvrwset.KVWrite;
  return proto.kvrwset.KVWrite.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kvrwset.KVWrite} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kvrwset.KVWrite}
 */
proto.kvrwset.KVWrite.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDelete(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kvrwset.KVWrite.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kvrwset.KVWrite.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kvrwset.KVWrite} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.KVWrite.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsDelete();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getValue_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.kvrwset.KVWrite.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kvrwset.KVWrite} returns this
 */
proto.kvrwset.KVWrite.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool is_delete = 2;
 * @return {boolean}
 */
proto.kvrwset.KVWrite.prototype.getIsDelete = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.kvrwset.KVWrite} returns this
 */
proto.kvrwset.KVWrite.prototype.setIsDelete = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bytes value = 3;
 * @return {!(string|Uint8Array)}
 */
proto.kvrwset.KVWrite.prototype.getValue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes value = 3;
 * This is a type-conversion wrapper around `getValue()`
 * @return {string}
 */
proto.kvrwset.KVWrite.prototype.getValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValue()));
};


/**
 * optional bytes value = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValue()`
 * @return {!Uint8Array}
 */
proto.kvrwset.KVWrite.prototype.getValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.kvrwset.KVWrite} returns this
 */
proto.kvrwset.KVWrite.prototype.setValue = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kvrwset.KVMetadataWrite.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kvrwset.KVMetadataWrite.prototype.toObject = function(opt_includeInstance) {
  return proto.kvrwset.KVMetadataWrite.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kvrwset.KVMetadataWrite} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.KVMetadataWrite.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
    proto.kvrwset.KVMetadataEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kvrwset.KVMetadataWrite}
 */
proto.kvrwset.KVMetadataWrite.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kvrwset.KVMetadataWrite;
  return proto.kvrwset.KVMetadataWrite.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kvrwset.KVMetadataWrite} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kvrwset.KVMetadataWrite}
 */
proto.kvrwset.KVMetadataWrite.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = new proto.kvrwset.KVMetadataEntry;
      reader.readMessage(value,proto.kvrwset.KVMetadataEntry.deserializeBinaryFromReader);
      msg.addEntries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kvrwset.KVMetadataWrite.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kvrwset.KVMetadataWrite.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kvrwset.KVMetadataWrite} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.KVMetadataWrite.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.kvrwset.KVMetadataEntry.serializeBinaryToWriter
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.kvrwset.KVMetadataWrite.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kvrwset.KVMetadataWrite} returns this
 */
proto.kvrwset.KVMetadataWrite.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated KVMetadataEntry entries = 2;
 * @return {!Array<!proto.kvrwset.KVMetadataEntry>}
 */
proto.kvrwset.KVMetadataWrite.prototype.getEntriesList = function() {
  return /** @type{!Array<!proto.kvrwset.KVMetadataEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kvrwset.KVMetadataEntry, 2));
};


/**
 * @param {!Array<!proto.kvrwset.KVMetadataEntry>} value
 * @return {!proto.kvrwset.KVMetadataWrite} returns this
*/
proto.kvrwset.KVMetadataWrite.prototype.setEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.kvrwset.KVMetadataEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kvrwset.KVMetadataEntry}
 */
proto.kvrwset.KVMetadataWrite.prototype.addEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.kvrwset.KVMetadataEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kvrwset.KVMetadataWrite} returns this
 */
proto.kvrwset.KVMetadataWrite.prototype.clearEntriesList = function() {
  return this.setEntriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kvrwset.KVReadHash.prototype.toObject = function(opt_includeInstance) {
  return proto.kvrwset.KVReadHash.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kvrwset.KVReadHash} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.KVReadHash.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyHash: msg.getKeyHash_asB64(),
    version: (f = msg.getVersion()) && proto.kvrwset.Version.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kvrwset.KVReadHash}
 */
proto.kvrwset.KVReadHash.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kvrwset.KVReadHash;
  return proto.kvrwset.KVReadHash.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kvrwset.KVReadHash} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kvrwset.KVReadHash}
 */
proto.kvrwset.KVReadHash.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setKeyHash(value);
      break;
    case 2:
      var value = new proto.kvrwset.Version;
      reader.readMessage(value,proto.kvrwset.Version.deserializeBinaryFromReader);
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kvrwset.KVReadHash.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kvrwset.KVReadHash.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kvrwset.KVReadHash} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.KVReadHash.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.kvrwset.Version.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes key_hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.kvrwset.KVReadHash.prototype.getKeyHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes key_hash = 1;
 * This is a type-conversion wrapper around `getKeyHash()`
 * @return {string}
 */
proto.kvrwset.KVReadHash.prototype.getKeyHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getKeyHash()));
};


/**
 * optional bytes key_hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getKeyHash()`
 * @return {!Uint8Array}
 */
proto.kvrwset.KVReadHash.prototype.getKeyHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getKeyHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.kvrwset.KVReadHash} returns this
 */
proto.kvrwset.KVReadHash.prototype.setKeyHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional Version version = 2;
 * @return {?proto.kvrwset.Version}
 */
proto.kvrwset.KVReadHash.prototype.getVersion = function() {
  return /** @type{?proto.kvrwset.Version} */ (
    jspb.Message.getWrapperField(this, proto.kvrwset.Version, 2));
};


/**
 * @param {?proto.kvrwset.Version|undefined} value
 * @return {!proto.kvrwset.KVReadHash} returns this
*/
proto.kvrwset.KVReadHash.prototype.setVersion = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kvrwset.KVReadHash} returns this
 */
proto.kvrwset.KVReadHash.prototype.clearVersion = function() {
  return this.setVersion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kvrwset.KVReadHash.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kvrwset.KVWriteHash.prototype.toObject = function(opt_includeInstance) {
  return proto.kvrwset.KVWriteHash.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kvrwset.KVWriteHash} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.KVWriteHash.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyHash: msg.getKeyHash_asB64(),
    isDelete: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    valueHash: msg.getValueHash_asB64(),
    isPurge: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kvrwset.KVWriteHash}
 */
proto.kvrwset.KVWriteHash.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kvrwset.KVWriteHash;
  return proto.kvrwset.KVWriteHash.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kvrwset.KVWriteHash} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kvrwset.KVWriteHash}
 */
proto.kvrwset.KVWriteHash.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setKeyHash(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDelete(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValueHash(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPurge(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kvrwset.KVWriteHash.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kvrwset.KVWriteHash.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kvrwset.KVWriteHash} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.KVWriteHash.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getIsDelete();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getValueHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getIsPurge();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional bytes key_hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.kvrwset.KVWriteHash.prototype.getKeyHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes key_hash = 1;
 * This is a type-conversion wrapper around `getKeyHash()`
 * @return {string}
 */
proto.kvrwset.KVWriteHash.prototype.getKeyHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getKeyHash()));
};


/**
 * optional bytes key_hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getKeyHash()`
 * @return {!Uint8Array}
 */
proto.kvrwset.KVWriteHash.prototype.getKeyHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getKeyHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.kvrwset.KVWriteHash} returns this
 */
proto.kvrwset.KVWriteHash.prototype.setKeyHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bool is_delete = 2;
 * @return {boolean}
 */
proto.kvrwset.KVWriteHash.prototype.getIsDelete = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.kvrwset.KVWriteHash} returns this
 */
proto.kvrwset.KVWriteHash.prototype.setIsDelete = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bytes value_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.kvrwset.KVWriteHash.prototype.getValueHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes value_hash = 3;
 * This is a type-conversion wrapper around `getValueHash()`
 * @return {string}
 */
proto.kvrwset.KVWriteHash.prototype.getValueHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValueHash()));
};


/**
 * optional bytes value_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValueHash()`
 * @return {!Uint8Array}
 */
proto.kvrwset.KVWriteHash.prototype.getValueHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValueHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.kvrwset.KVWriteHash} returns this
 */
proto.kvrwset.KVWriteHash.prototype.setValueHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bool is_purge = 4;
 * @return {boolean}
 */
proto.kvrwset.KVWriteHash.prototype.getIsPurge = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.kvrwset.KVWriteHash} returns this
 */
proto.kvrwset.KVWriteHash.prototype.setIsPurge = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kvrwset.KVMetadataWriteHash.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kvrwset.KVMetadataWriteHash.prototype.toObject = function(opt_includeInstance) {
  return proto.kvrwset.KVMetadataWriteHash.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kvrwset.KVMetadataWriteHash} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.KVMetadataWriteHash.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyHash: msg.getKeyHash_asB64(),
    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
    proto.kvrwset.KVMetadataEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kvrwset.KVMetadataWriteHash}
 */
proto.kvrwset.KVMetadataWriteHash.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kvrwset.KVMetadataWriteHash;
  return proto.kvrwset.KVMetadataWriteHash.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kvrwset.KVMetadataWriteHash} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kvrwset.KVMetadataWriteHash}
 */
proto.kvrwset.KVMetadataWriteHash.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setKeyHash(value);
      break;
    case 2:
      var value = new proto.kvrwset.KVMetadataEntry;
      reader.readMessage(value,proto.kvrwset.KVMetadataEntry.deserializeBinaryFromReader);
      msg.addEntries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kvrwset.KVMetadataWriteHash.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kvrwset.KVMetadataWriteHash.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kvrwset.KVMetadataWriteHash} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.KVMetadataWriteHash.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.kvrwset.KVMetadataEntry.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes key_hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.kvrwset.KVMetadataWriteHash.prototype.getKeyHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes key_hash = 1;
 * This is a type-conversion wrapper around `getKeyHash()`
 * @return {string}
 */
proto.kvrwset.KVMetadataWriteHash.prototype.getKeyHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getKeyHash()));
};


/**
 * optional bytes key_hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getKeyHash()`
 * @return {!Uint8Array}
 */
proto.kvrwset.KVMetadataWriteHash.prototype.getKeyHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getKeyHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.kvrwset.KVMetadataWriteHash} returns this
 */
proto.kvrwset.KVMetadataWriteHash.prototype.setKeyHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * repeated KVMetadataEntry entries = 2;
 * @return {!Array<!proto.kvrwset.KVMetadataEntry>}
 */
proto.kvrwset.KVMetadataWriteHash.prototype.getEntriesList = function() {
  return /** @type{!Array<!proto.kvrwset.KVMetadataEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kvrwset.KVMetadataEntry, 2));
};


/**
 * @param {!Array<!proto.kvrwset.KVMetadataEntry>} value
 * @return {!proto.kvrwset.KVMetadataWriteHash} returns this
*/
proto.kvrwset.KVMetadataWriteHash.prototype.setEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.kvrwset.KVMetadataEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kvrwset.KVMetadataEntry}
 */
proto.kvrwset.KVMetadataWriteHash.prototype.addEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.kvrwset.KVMetadataEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kvrwset.KVMetadataWriteHash} returns this
 */
proto.kvrwset.KVMetadataWriteHash.prototype.clearEntriesList = function() {
  return this.setEntriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kvrwset.KVMetadataEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.kvrwset.KVMetadataEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kvrwset.KVMetadataEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.KVMetadataEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: msg.getValue_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kvrwset.KVMetadataEntry}
 */
proto.kvrwset.KVMetadataEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kvrwset.KVMetadataEntry;
  return proto.kvrwset.KVMetadataEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kvrwset.KVMetadataEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kvrwset.KVMetadataEntry}
 */
proto.kvrwset.KVMetadataEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kvrwset.KVMetadataEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kvrwset.KVMetadataEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kvrwset.KVMetadataEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.KVMetadataEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.kvrwset.KVMetadataEntry.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kvrwset.KVMetadataEntry} returns this
 */
proto.kvrwset.KVMetadataEntry.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes value = 2;
 * @return {!(string|Uint8Array)}
 */
proto.kvrwset.KVMetadataEntry.prototype.getValue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes value = 2;
 * This is a type-conversion wrapper around `getValue()`
 * @return {string}
 */
proto.kvrwset.KVMetadataEntry.prototype.getValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValue()));
};


/**
 * optional bytes value = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValue()`
 * @return {!Uint8Array}
 */
proto.kvrwset.KVMetadataEntry.prototype.getValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.kvrwset.KVMetadataEntry} returns this
 */
proto.kvrwset.KVMetadataEntry.prototype.setValue = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kvrwset.Version.prototype.toObject = function(opt_includeInstance) {
  return proto.kvrwset.Version.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kvrwset.Version} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.Version.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockNum: jspb.Message.getFieldWithDefault(msg, 1, 0),
    txNum: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kvrwset.Version}
 */
proto.kvrwset.Version.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kvrwset.Version;
  return proto.kvrwset.Version.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kvrwset.Version} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kvrwset.Version}
 */
proto.kvrwset.Version.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBlockNum(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTxNum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kvrwset.Version.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kvrwset.Version.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kvrwset.Version} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.Version.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlockNum();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getTxNum();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 block_num = 1;
 * @return {number}
 */
proto.kvrwset.Version.prototype.getBlockNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.kvrwset.Version} returns this
 */
proto.kvrwset.Version.prototype.setBlockNum = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 tx_num = 2;
 * @return {number}
 */
proto.kvrwset.Version.prototype.getTxNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.kvrwset.Version} returns this
 */
proto.kvrwset.Version.prototype.setTxNum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.kvrwset.RangeQueryInfo.oneofGroups_ = [[4,5]];

/**
 * @enum {number}
 */
proto.kvrwset.RangeQueryInfo.ReadsInfoCase = {
  READS_INFO_NOT_SET: 0,
  RAW_READS: 4,
  READS_MERKLE_HASHES: 5
};

/**
 * @return {proto.kvrwset.RangeQueryInfo.ReadsInfoCase}
 */
proto.kvrwset.RangeQueryInfo.prototype.getReadsInfoCase = function() {
  return /** @type {proto.kvrwset.RangeQueryInfo.ReadsInfoCase} */(jspb.Message.computeOneofCase(this, proto.kvrwset.RangeQueryInfo.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kvrwset.RangeQueryInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.kvrwset.RangeQueryInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kvrwset.RangeQueryInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.RangeQueryInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    startKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    endKey: jspb.Message.getFieldWithDefault(msg, 2, ""),
    itrExhausted: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    rawReads: (f = msg.getRawReads()) && proto.kvrwset.QueryReads.toObject(includeInstance, f),
    readsMerkleHashes: (f = msg.getReadsMerkleHashes()) && proto.kvrwset.QueryReadsMerkleSummary.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kvrwset.RangeQueryInfo}
 */
proto.kvrwset.RangeQueryInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kvrwset.RangeQueryInfo;
  return proto.kvrwset.RangeQueryInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kvrwset.RangeQueryInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kvrwset.RangeQueryInfo}
 */
proto.kvrwset.RangeQueryInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndKey(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setItrExhausted(value);
      break;
    case 4:
      var value = new proto.kvrwset.QueryReads;
      reader.readMessage(value,proto.kvrwset.QueryReads.deserializeBinaryFromReader);
      msg.setRawReads(value);
      break;
    case 5:
      var value = new proto.kvrwset.QueryReadsMerkleSummary;
      reader.readMessage(value,proto.kvrwset.QueryReadsMerkleSummary.deserializeBinaryFromReader);
      msg.setReadsMerkleHashes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kvrwset.RangeQueryInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kvrwset.RangeQueryInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kvrwset.RangeQueryInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.RangeQueryInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEndKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getItrExhausted();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getRawReads();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.kvrwset.QueryReads.serializeBinaryToWriter
    );
  }
  f = message.getReadsMerkleHashes();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.kvrwset.QueryReadsMerkleSummary.serializeBinaryToWriter
    );
  }
};


/**
 * optional string start_key = 1;
 * @return {string}
 */
proto.kvrwset.RangeQueryInfo.prototype.getStartKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kvrwset.RangeQueryInfo} returns this
 */
proto.kvrwset.RangeQueryInfo.prototype.setStartKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string end_key = 2;
 * @return {string}
 */
proto.kvrwset.RangeQueryInfo.prototype.getEndKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.kvrwset.RangeQueryInfo} returns this
 */
proto.kvrwset.RangeQueryInfo.prototype.setEndKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool itr_exhausted = 3;
 * @return {boolean}
 */
proto.kvrwset.RangeQueryInfo.prototype.getItrExhausted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.kvrwset.RangeQueryInfo} returns this
 */
proto.kvrwset.RangeQueryInfo.prototype.setItrExhausted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional QueryReads raw_reads = 4;
 * @return {?proto.kvrwset.QueryReads}
 */
proto.kvrwset.RangeQueryInfo.prototype.getRawReads = function() {
  return /** @type{?proto.kvrwset.QueryReads} */ (
    jspb.Message.getWrapperField(this, proto.kvrwset.QueryReads, 4));
};


/**
 * @param {?proto.kvrwset.QueryReads|undefined} value
 * @return {!proto.kvrwset.RangeQueryInfo} returns this
*/
proto.kvrwset.RangeQueryInfo.prototype.setRawReads = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.kvrwset.RangeQueryInfo.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kvrwset.RangeQueryInfo} returns this
 */
proto.kvrwset.RangeQueryInfo.prototype.clearRawReads = function() {
  return this.setRawReads(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kvrwset.RangeQueryInfo.prototype.hasRawReads = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional QueryReadsMerkleSummary reads_merkle_hashes = 5;
 * @return {?proto.kvrwset.QueryReadsMerkleSummary}
 */
proto.kvrwset.RangeQueryInfo.prototype.getReadsMerkleHashes = function() {
  return /** @type{?proto.kvrwset.QueryReadsMerkleSummary} */ (
    jspb.Message.getWrapperField(this, proto.kvrwset.QueryReadsMerkleSummary, 5));
};


/**
 * @param {?proto.kvrwset.QueryReadsMerkleSummary|undefined} value
 * @return {!proto.kvrwset.RangeQueryInfo} returns this
*/
proto.kvrwset.RangeQueryInfo.prototype.setReadsMerkleHashes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.kvrwset.RangeQueryInfo.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kvrwset.RangeQueryInfo} returns this
 */
proto.kvrwset.RangeQueryInfo.prototype.clearReadsMerkleHashes = function() {
  return this.setReadsMerkleHashes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kvrwset.RangeQueryInfo.prototype.hasReadsMerkleHashes = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kvrwset.QueryReads.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kvrwset.QueryReads.prototype.toObject = function(opt_includeInstance) {
  return proto.kvrwset.QueryReads.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kvrwset.QueryReads} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.QueryReads.toObject = function(includeInstance, msg) {
  var f, obj = {
    kvReadsList: jspb.Message.toObjectList(msg.getKvReadsList(),
    proto.kvrwset.KVRead.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kvrwset.QueryReads}
 */
proto.kvrwset.QueryReads.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kvrwset.QueryReads;
  return proto.kvrwset.QueryReads.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kvrwset.QueryReads} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kvrwset.QueryReads}
 */
proto.kvrwset.QueryReads.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.kvrwset.KVRead;
      reader.readMessage(value,proto.kvrwset.KVRead.deserializeBinaryFromReader);
      msg.addKvReads(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kvrwset.QueryReads.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kvrwset.QueryReads.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kvrwset.QueryReads} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.QueryReads.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKvReadsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.kvrwset.KVRead.serializeBinaryToWriter
    );
  }
};


/**
 * repeated KVRead kv_reads = 1;
 * @return {!Array<!proto.kvrwset.KVRead>}
 */
proto.kvrwset.QueryReads.prototype.getKvReadsList = function() {
  return /** @type{!Array<!proto.kvrwset.KVRead>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kvrwset.KVRead, 1));
};


/**
 * @param {!Array<!proto.kvrwset.KVRead>} value
 * @return {!proto.kvrwset.QueryReads} returns this
*/
proto.kvrwset.QueryReads.prototype.setKvReadsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.kvrwset.KVRead=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kvrwset.KVRead}
 */
proto.kvrwset.QueryReads.prototype.addKvReads = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.kvrwset.KVRead, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kvrwset.QueryReads} returns this
 */
proto.kvrwset.QueryReads.prototype.clearKvReadsList = function() {
  return this.setKvReadsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kvrwset.QueryReadsMerkleSummary.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kvrwset.QueryReadsMerkleSummary.prototype.toObject = function(opt_includeInstance) {
  return proto.kvrwset.QueryReadsMerkleSummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kvrwset.QueryReadsMerkleSummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.QueryReadsMerkleSummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxDegree: jspb.Message.getFieldWithDefault(msg, 1, 0),
    maxLevel: jspb.Message.getFieldWithDefault(msg, 2, 0),
    maxLevelHashesList: msg.getMaxLevelHashesList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kvrwset.QueryReadsMerkleSummary}
 */
proto.kvrwset.QueryReadsMerkleSummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kvrwset.QueryReadsMerkleSummary;
  return proto.kvrwset.QueryReadsMerkleSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kvrwset.QueryReadsMerkleSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kvrwset.QueryReadsMerkleSummary}
 */
proto.kvrwset.QueryReadsMerkleSummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxDegree(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxLevel(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addMaxLevelHashes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kvrwset.QueryReadsMerkleSummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kvrwset.QueryReadsMerkleSummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kvrwset.QueryReadsMerkleSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvrwset.QueryReadsMerkleSummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxDegree();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getMaxLevel();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getMaxLevelHashesList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
};


/**
 * optional uint32 max_degree = 1;
 * @return {number}
 */
proto.kvrwset.QueryReadsMerkleSummary.prototype.getMaxDegree = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.kvrwset.QueryReadsMerkleSummary} returns this
 */
proto.kvrwset.QueryReadsMerkleSummary.prototype.setMaxDegree = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 max_level = 2;
 * @return {number}
 */
proto.kvrwset.QueryReadsMerkleSummary.prototype.getMaxLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.kvrwset.QueryReadsMerkleSummary} returns this
 */
proto.kvrwset.QueryReadsMerkleSummary.prototype.setMaxLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated bytes max_level_hashes = 3;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.kvrwset.QueryReadsMerkleSummary.prototype.getMaxLevelHashesList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes max_level_hashes = 3;
 * This is a type-conversion wrapper around `getMaxLevelHashesList()`
 * @return {!Array<string>}
 */
proto.kvrwset.QueryReadsMerkleSummary.prototype.getMaxLevelHashesList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getMaxLevelHashesList()));
};


/**
 * repeated bytes max_level_hashes = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMaxLevelHashesList()`
 * @return {!Array<!Uint8Array>}
 */
proto.kvrwset.QueryReadsMerkleSummary.prototype.getMaxLevelHashesList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getMaxLevelHashesList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.kvrwset.QueryReadsMerkleSummary} returns this
 */
proto.kvrwset.QueryReadsMerkleSummary.prototype.setMaxLevelHashesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.kvrwset.QueryReadsMerkleSummary} returns this
 */
proto.kvrwset.QueryReadsMerkleSummary.prototype.addMaxLevelHashes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kvrwset.QueryReadsMerkleSummary} returns this
 */
proto.kvrwset.QueryReadsMerkleSummary.prototype.clearMaxLevelHashesList = function() {
  return this.setMaxLevelHashesList([]);
};


goog.object.extend(exports, proto.kvrwset);
