// GENERATED CODE -- DO NOT EDIT!

// Original file comments:
// Copyright the Hyperledger Fabric contributors. All rights reserved.
//
// SPDX-License-Identifier: Apache-2.0
//
'use strict';
var grpc = require('@grpc/grpc-js');
var orderer_blockattestation_pb = require('../orderer/blockattestation_pb.js');
var common_common_pb = require('../common/common_pb.js');

function serialize_common_Envelope(arg) {
  if (!(arg instanceof common_common_pb.Envelope)) {
    throw new Error('Expected argument of type common.Envelope');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_common_Envelope(buffer_arg) {
  return common_common_pb.Envelope.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_orderer_BlockAttestationResponse(arg) {
  if (!(arg instanceof orderer_blockattestation_pb.BlockAttestationResponse)) {
    throw new Error('Expected argument of type orderer.BlockAttestationResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_orderer_BlockAttestationResponse(buffer_arg) {
  return orderer_blockattestation_pb.BlockAttestationResponse.deserializeBinary(new Uint8Array(buffer_arg));
}


var BlockAttestationsService = exports.BlockAttestationsService = {
  // BlockAttestations receives an Envelope of type DELIVER_SEEK_INFO , then sends back a stream of BlockAttestations.
blockAttestations: {
    path: '/orderer.BlockAttestations/BlockAttestations',
    requestStream: false,
    responseStream: true,
    requestType: common_common_pb.Envelope,
    responseType: orderer_blockattestation_pb.BlockAttestationResponse,
    requestSerialize: serialize_common_Envelope,
    requestDeserialize: deserialize_common_Envelope,
    responseSerialize: serialize_orderer_BlockAttestationResponse,
    responseDeserialize: deserialize_orderer_BlockAttestationResponse,
  },
};

exports.BlockAttestationsClient = grpc.makeGenericClientConstructor(BlockAttestationsService);
