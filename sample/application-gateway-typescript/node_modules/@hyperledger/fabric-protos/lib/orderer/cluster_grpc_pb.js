// GENERATED CODE -- DO NOT EDIT!

// Original file comments:
// Copyright the Hyperledger Fabric contributors. All rights reserved.
//
// SPDX-License-Identifier: Apache-2.0
//
'use strict';
var grpc = require('@grpc/grpc-js');
var orderer_cluster_pb = require('../orderer/cluster_pb.js');
var common_common_pb = require('../common/common_pb.js');

function serialize_orderer_StepRequest(arg) {
  if (!(arg instanceof orderer_cluster_pb.StepRequest)) {
    throw new Error('Expected argument of type orderer.StepRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_orderer_StepRequest(buffer_arg) {
  return orderer_cluster_pb.StepRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_orderer_StepResponse(arg) {
  if (!(arg instanceof orderer_cluster_pb.StepResponse)) {
    throw new Error('Expected argument of type orderer.StepResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_orderer_StepResponse(buffer_arg) {
  return orderer_cluster_pb.StepResponse.deserializeBinary(new Uint8Array(buffer_arg));
}


// Cluster defines communication between cluster members.
var ClusterService = exports.ClusterService = {
  // Step passes an implementation-specific message to another cluster member.
step: {
    path: '/orderer.Cluster/Step',
    requestStream: true,
    responseStream: true,
    requestType: orderer_cluster_pb.StepRequest,
    responseType: orderer_cluster_pb.StepResponse,
    requestSerialize: serialize_orderer_StepRequest,
    requestDeserialize: deserialize_orderer_StepRequest,
    responseSerialize: serialize_orderer_StepResponse,
    responseDeserialize: deserialize_orderer_StepResponse,
  },
};

exports.ClusterClient = grpc.makeGenericClientConstructor(ClusterService);
