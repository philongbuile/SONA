// GENERATED CODE -- DO NOT EDIT!

// package: orderer
// file: orderer/ab.proto

import * as orderer_ab_pb from "../orderer/ab_pb";
import * as common_common_pb from "../common/common_pb";
import * as grpc from "@grpc/grpc-js";

interface IAtomicBroadcastService extends grpc.ServiceDefinition<grpc.UntypedServiceImplementation> {
  broadcast: grpc.MethodDefinition<common_common_pb.Envelope, orderer_ab_pb.BroadcastResponse>;
  deliver: grpc.MethodDefinition<common_common_pb.Envelope, orderer_ab_pb.DeliverResponse>;
}

export const AtomicBroadcastService: IAtomicBroadcastService;

export interface IAtomicBroadcastServer extends grpc.UntypedServiceImplementation {
  broadcast: grpc.handleBidiStreamingCall<common_common_pb.Envelope, orderer_ab_pb.BroadcastResponse>;
  deliver: grpc.handleBidiStreamingCall<common_common_pb.Envelope, orderer_ab_pb.DeliverResponse>;
}

export class AtomicBroadcastClient extends grpc.Client {
  constructor(address: string, credentials: grpc.ChannelCredentials, options?: object);
  broadcast(metadataOrOptions?: grpc.Metadata | grpc.CallOptions | null): grpc.ClientDuplexStream<common_common_pb.Envelope, orderer_ab_pb.BroadcastResponse>;
  broadcast(metadata?: grpc.Metadata | null, options?: grpc.CallOptions | null): grpc.ClientDuplexStream<common_common_pb.Envelope, orderer_ab_pb.BroadcastResponse>;
  deliver(metadataOrOptions?: grpc.Metadata | grpc.CallOptions | null): grpc.ClientDuplexStream<common_common_pb.Envelope, orderer_ab_pb.DeliverResponse>;
  deliver(metadata?: grpc.Metadata | null, options?: grpc.CallOptions | null): grpc.ClientDuplexStream<common_common_pb.Envelope, orderer_ab_pb.DeliverResponse>;
}
