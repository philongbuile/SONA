// package: orderer
// file: orderer/blockattestation.proto

import * as jspb from "google-protobuf";
import * as common_common_pb from "../common/common_pb";

export class BlockAttestation extends jspb.Message {
  hasHeader(): boolean;
  clearHeader(): void;
  getHeader(): common_common_pb.BlockHeader | undefined;
  setHeader(value?: common_common_pb.BlockHeader): void;

  hasMetadata(): boolean;
  clearMetadata(): void;
  getMetadata(): common_common_pb.BlockMetadata | undefined;
  setMetadata(value?: common_common_pb.BlockMetadata): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): BlockAttestation.AsObject;
  static toObject(includeInstance: boolean, msg: BlockAttestation): BlockAttestation.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: BlockAttestation, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): BlockAttestation;
  static deserializeBinaryFromReader(message: BlockAttestation, reader: jspb.BinaryReader): BlockAttestation;
}

export namespace BlockAttestation {
  export type AsObject = {
    header?: common_common_pb.BlockHeader.AsObject,
    metadata?: common_common_pb.BlockMetadata.AsObject,
  }
}

export class BlockAttestationResponse extends jspb.Message {
  hasStatus(): boolean;
  clearStatus(): void;
  getStatus(): common_common_pb.StatusMap[keyof common_common_pb.StatusMap];
  setStatus(value: common_common_pb.StatusMap[keyof common_common_pb.StatusMap]): void;

  hasBlockAttestation(): boolean;
  clearBlockAttestation(): void;
  getBlockAttestation(): BlockAttestation | undefined;
  setBlockAttestation(value?: BlockAttestation): void;

  getTypeCase(): BlockAttestationResponse.TypeCase;
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): BlockAttestationResponse.AsObject;
  static toObject(includeInstance: boolean, msg: BlockAttestationResponse): BlockAttestationResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: BlockAttestationResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): BlockAttestationResponse;
  static deserializeBinaryFromReader(message: BlockAttestationResponse, reader: jspb.BinaryReader): BlockAttestationResponse;
}

export namespace BlockAttestationResponse {
  export type AsObject = {
    status: common_common_pb.StatusMap[keyof common_common_pb.StatusMap],
    blockAttestation?: BlockAttestation.AsObject,
  }

  export enum TypeCase {
    TYPE_NOT_SET = 0,
    STATUS = 1,
    BLOCK_ATTESTATION = 2,
  }
}

