// package: etcdraft
// file: orderer/etcdraft/metadata.proto

import * as jspb from "google-protobuf";

export class BlockMetadata extends jspb.Message {
  clearConsenterIdsList(): void;
  getConsenterIdsList(): Array<number>;
  setConsenterIdsList(value: Array<number>): void;
  addConsenterIds(value: number, index?: number): number;

  getNextConsenterId(): number;
  setNextConsenterId(value: number): void;

  getRaftIndex(): number;
  setRaftIndex(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): BlockMetadata.AsObject;
  static toObject(includeInstance: boolean, msg: BlockMetadata): BlockMetadata.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: BlockMetadata, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): BlockMetadata;
  static deserializeBinaryFromReader(message: BlockMetadata, reader: jspb.BinaryReader): BlockMetadata;
}

export namespace BlockMetadata {
  export type AsObject = {
    consenterIdsList: Array<number>,
    nextConsenterId: number,
    raftIndex: number,
  }
}

export class ClusterMetadata extends jspb.Message {
  clearActiveNodesList(): void;
  getActiveNodesList(): Array<number>;
  setActiveNodesList(value: Array<number>): void;
  addActiveNodes(value: number, index?: number): number;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ClusterMetadata.AsObject;
  static toObject(includeInstance: boolean, msg: ClusterMetadata): ClusterMetadata.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ClusterMetadata, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ClusterMetadata;
  static deserializeBinaryFromReader(message: ClusterMetadata, reader: jspb.BinaryReader): ClusterMetadata;
}

export namespace ClusterMetadata {
  export type AsObject = {
    activeNodesList: Array<number>,
  }
}

