// GENERATED CODE -- DO NOT EDIT!

// package: gossip
// file: gossip/message.proto

import * as gossip_message_pb from "../gossip/message_pb";
import * as grpc from "@grpc/grpc-js";

interface IGossipService extends grpc.ServiceDefinition<grpc.UntypedServiceImplementation> {
  gossipStream: grpc.MethodDefinition<gossip_message_pb.Envelope, gossip_message_pb.Envelope>;
  ping: grpc.MethodDefinition<gossip_message_pb.Empty, gossip_message_pb.Empty>;
}

export const GossipService: IGossipService;

export interface IGossipServer extends grpc.UntypedServiceImplementation {
  gossipStream: grpc.handleBidiStreamingCall<gossip_message_pb.Envelope, gossip_message_pb.Envelope>;
  ping: grpc.handleUnaryCall<gossip_message_pb.Empty, gossip_message_pb.Empty>;
}

export class GossipClient extends grpc.Client {
  constructor(address: string, credentials: grpc.ChannelCredentials, options?: object);
  gossipStream(metadataOrOptions?: grpc.Metadata | grpc.CallOptions | null): grpc.ClientDuplexStream<gossip_message_pb.Envelope, gossip_message_pb.Envelope>;
  gossipStream(metadata?: grpc.Metadata | null, options?: grpc.CallOptions | null): grpc.ClientDuplexStream<gossip_message_pb.Envelope, gossip_message_pb.Envelope>;
  ping(argument: gossip_message_pb.Empty, callback: grpc.requestCallback<gossip_message_pb.Empty>): grpc.ClientUnaryCall;
  ping(argument: gossip_message_pb.Empty, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<gossip_message_pb.Empty>): grpc.ClientUnaryCall;
  ping(argument: gossip_message_pb.Empty, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<gossip_message_pb.Empty>): grpc.ClientUnaryCall;
}
