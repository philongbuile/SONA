// GENERATED CODE -- DO NOT EDIT!

// Original file comments:
// Copyright the Hyperledger Fabric contributors. All rights reserved.
//
// SPDX-License-Identifier: Apache-2.0
//
'use strict';
var grpc = require('@grpc/grpc-js');
var gossip_message_pb = require('../gossip/message_pb.js');
var peer_collection_pb = require('../peer/collection_pb.js');

function serialize_gossip_Empty(arg) {
  if (!(arg instanceof gossip_message_pb.Empty)) {
    throw new Error('Expected argument of type gossip.Empty');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_gossip_Empty(buffer_arg) {
  return gossip_message_pb.Empty.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_gossip_Envelope(arg) {
  if (!(arg instanceof gossip_message_pb.Envelope)) {
    throw new Error('Expected argument of type gossip.Envelope');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_gossip_Envelope(buffer_arg) {
  return gossip_message_pb.Envelope.deserializeBinary(new Uint8Array(buffer_arg));
}


// Gossip
var GossipService = exports.GossipService = {
  // GossipStream is the gRPC stream used for sending and receiving messages
gossipStream: {
    path: '/gossip.Gossip/GossipStream',
    requestStream: true,
    responseStream: true,
    requestType: gossip_message_pb.Envelope,
    responseType: gossip_message_pb.Envelope,
    requestSerialize: serialize_gossip_Envelope,
    requestDeserialize: deserialize_gossip_Envelope,
    responseSerialize: serialize_gossip_Envelope,
    responseDeserialize: deserialize_gossip_Envelope,
  },
  // Ping is used to probe a remote peer's aliveness
ping: {
    path: '/gossip.Gossip/Ping',
    requestStream: false,
    responseStream: false,
    requestType: gossip_message_pb.Empty,
    responseType: gossip_message_pb.Empty,
    requestSerialize: serialize_gossip_Empty,
    requestDeserialize: deserialize_gossip_Empty,
    responseSerialize: serialize_gossip_Empty,
    responseDeserialize: deserialize_gossip_Empty,
  },
};

exports.GossipClient = grpc.makeGenericClientConstructor(GossipService);
